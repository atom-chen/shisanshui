

var db = require('base/dbmanager');
var moment = require('moment');

module.exports = RoomManager;

function RoomManager() {
    this.id = 0;//数据库对应id
    this.roomId = 0;//房间号
    this.setting1 = "";//局数
    this.setting2 = "";//人数
    this.setting3 = "";//玩法 [疯狂场,鬼牌,比花色,坐庄,马牌]
    this.setting4 = "";//房费 0为平摊
    this.setting5 = "";//
    this.createUserId = 0;//创建者
    this.users = "";//用户
    this.status = 0;//使用状态
    this.createAt = "";
    this.updateAt = "";
    this.type = "";//牌桌类型

    /*创建一个房间*/
    this.createRoom = function(roomId,callback) {
        var cTime = moment().format('YYYY-MM-DD HH:mm:ss');
        var sql = "INSERT INTO rooms(roomId,createAt,updateAt) VALUES(?,?,?)";
        var sqlParam = [roomId,cTime,cTime];
        db.query(sql,sqlParam,function (error,result) {
            if (error) {
                console.log('[INSERT/UPDATE ERROR] - ',error.message);
                return;
            }
            console.log("CREATE SUCCESS:"+roomId);
            callback(error,result);
        });
    };

    /*设置房间状态*/
    this.setRoomStatus = function (status) {
        if (this.id == 0) {
            return false;
        }
        this.status = status + '';
        var sql = "UPDATE rooms SET status = ? WHERE id = ?";
        var sqlParam = [status,this.id];
        db.query(sql,sqlParam,function (error) {
            if (error) {
                console.log("UPDATE ERROR - ",error.message);
            }
        });
    };

    /*更新房间信息*/
    this.save = function (callback) {
        if (this.id == 0) {
            return false;
        }
        var cTime = moment().format('YYYY-MM-DD HH:mm:ss');
        var sql = "UPDATE rooms SET status = ?,setting1 = ?,setting2 = ?,setting3 = ?,setting4 = ?,setting5 = ?,createUserId = ?,updateAt = ?,type = ? WHERE id = ?";
        var sqlParam = [''+this.status,this.setting1,this.setting2,JSON.stringify(this.setting3),this.setting4,this.setting5,this.createUserId,cTime,this.type,this.id];
        db.query(sql,sqlParam,function (error) {
            if (error) {
                console.log("UPDATE ERROR - ",error.message);
                console.log("room_manager - 64行");
            }
            callback(error);
        });
    };

    /*清空房间*/
    this.clearRoom = function (callback) {
        this.setting1 = "";
        this.setting2 = "";
        this.setting3 = "";
        this.setting4 = "";
        this.setting5 = "";
        this.createUserId = 0;
        this.users = "";
        this.status = 0;
        this.type = "";
        this.save(callback);
    };
}

/*清空所有的房间信息*/
RoomManager.initRooms = function () {
    var sql = "UPDATE rooms SET status = 0,setting1 = '',setting2 = '',setting3 = '',createUserId = 0";
    db.query(sql,null,function () {

    });
};

/*获取一个可以用的房间*/
RoomManager.getAvailableRoom = function (peopleArr,callback) {
    var sql = "SELECT * FROM rooms WHERE status = 0  ORDER BY rand() LIMIT 1";
    db.query(sql,null,function (error,result) {
        if (error) {
            console.log('[SELECT ERROR] -',error.message);
            callback(false,null);
        }
        //console.log("用空余的房间")
        //处理
        //console.log(result);
        if (result.length > 0) {
            var data = result[0];
            var obj = new RoomManager();
            obj.id = data['id'];
            obj.roomId = data['roomId'];
            obj.status = data['status'];
            //改变状态
            obj.setRoomStatus(1);
            callback(true,obj,peopleArr);
        }
    });
};

/*清空房间状态*/ 
RoomManager.updateRoom = function(roomId){
    var sql = "UPDATE rooms SET status = ?,setting1 = ?,setting2 = ?,setting3 = ?,setting4 = ?,setting5 = ?,createUserId = ?,updateAt = ?,type = ? WHERE roomId = ?";
    var sqlParam = [0,'','','','','','','','',roomId];
    db.query(sql,sqlParam,function (error) {
        if (error) {
            console.log("UPDATE ERROR - ",error.message);
        }
    });
}
/*预先跑的脚本*/
RoomManager.createRoom = function (index) {
    if (index > 999999) {
        console.log("room-manager-120--------结束创建--------");
        return;
    }
    console.log("room-manager-123--------开始创建--------");
    index++;
    var mng = new RoomManager();
    mng.createRoom(index,function (error,result) {
        while (Math.random() < 0.99) {
            index++;
        }
        RoomManager.createRoom(index++);
    });
};

RoomManager.createRooms = function () {
    RoomManager.createRoom(218168);
};