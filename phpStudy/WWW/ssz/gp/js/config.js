function stringSource(e){var t=0;return function(){return t<e.length?e.charCodeAt(t++):null}}function stringDestination(){var e=[],t=[];return function(){return 0===arguments.length?t.join("")+stringFromCharCode.apply(String,e):(e.length+arguments.length>1024&&(t.push(stringFromCharCode.apply(String,e)),e.length=0),void Array.prototype.push.apply(e,arguments))}}function ieee754_read(e,t,r,n,i){var a,s,o=8*i-n-1,f=(1<<o)-1,u=f>>1,p=-7,_=r?i-1:0,d=r?-1:1,l=e[t+_];for(_+=d,a=l&(1<<-p)-1,l>>=-p,p+=o;p>0;a=256*a+e[t+_],_+=d,p-=8);for(s=a&(1<<-p)-1,a>>=-p,p+=n;p>0;s=256*s+e[t+_],_+=d,p-=8);if(0===a)a=1-u;else{if(a===f)return s?NaN:(l?-1:1)*(1/0);s+=Math.pow(2,n),a-=u}return(l?-1:1)*s*Math.pow(2,a-n)}function ieee754_write(e,t,r,n,i,a){var s,o,f,u=8*a-i-1,p=(1<<u)-1,_=p>>1,d=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,l=n?0:a-1,c=n?1:-1,h=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,s=p):(s=Math.floor(Math.log(t)/Math.LN2),t*(f=Math.pow(2,-s))<1&&(s--,f*=2),t+=s+_>=1?d/f:d*Math.pow(2,1-_),t*f>=2&&(s++,f/=2),s+_>=p?(o=0,s=p):s+_>=1?(o=(t*f-1)*Math.pow(2,i),s+=_):(o=t*Math.pow(2,_-1)*Math.pow(2,i),s=0));i>=8;e[r+l]=255&o,l+=c,o/=256,i-=8);for(s=s<<i|o,u+=i;u>0;e[r+l]=255&s,l+=c,s/=256,u-=8);e[r+l-c]|=128*h}function td_check_vaild(e,t){return e.remaining()>=t}function td_check_unvaild(e,t){return!td_check_vaild(e,t)}function td_from_value(e,t){switch(t){case TYPE_U8:case TYPE_I8:case TYPE_U16:case TYPE_I16:case TYPE_U32:case TYPE_I32:case TYPE_FLOAT:return{pattern:t,number:e};case TYPE_STR:return{pattern:t,str:e};case TYPE_RAW:return{pattern:t,raw:e};case TYPE_MAP:return{pattern:t,map:e};case TYPE_AU8:case TYPE_AI8:case TYPE_AU16:case TYPE_AI16:case TYPE_AU32:case TYPE_AI32:case TYPE_AFLOAT:case TYPE_ASTR:case TYPE_ARAW:case TYPE_AMAP:return{pattern:t,list:e}}return{pattern:TYPE_NIL}}function td_into_value(e){switch(e.pattern){case TYPE_U8:case TYPE_I8:case TYPE_U16:case TYPE_I16:case TYPE_U32:case TYPE_I32:case TYPE_FLOAT:return e.number;case TYPE_STR:return e.str;case TYPE_RAW:return e.raw;case TYPE_MAP:return e.map;case TYPE_AU8:case TYPE_AI8:case TYPE_AU16:case TYPE_AI16:case TYPE_AU32:case TYPE_AI32:case TYPE_AFLOAT:case TYPE_ASTR:case TYPE_ARAW:case TYPE_AMAP:return e.list}return null}function get_field_index_name(e,t){return(e.index_field||{})[t]}function get_field_by_name(e,t){return(e.field||{})[t]}function get_field_by_index(e,t){var r=get_field_index_name(e,t);return r?get_field_by_name(e,r):null}function get_proto_by_name(e,t){return(e.proto||{})[t]}function get_proto_msg_type(e,t){return(e.msg_proto||{})[t]}function td_reinit_proto(e){"string"==typeof e&&(e=JSON.parse(e)),e.field=e.field||{},e.proto=e.proto||{},e.index_field={},e.msg_proto={};for(var t in e.field){var r=e.field[t];r.pattern=get_type_by_name(r.pattern),e.index_field[r.index]=t}for(var t in e.proto){var r=e.proto[t];r.pattern=get_type_by_name(r.pattern),e.msg_proto[t]=r.msg_type}td_proto_config=e}function new_type_nil(){return{pattern:TYPE_NIL}}function decode_number(e,t){switch(t){case TYPE_U8:return td_check_unvaild(e,1)?new_type_nil():{pattern:TYPE_U8,number:e.readUint8()};case TYPE_I8:return td_check_unvaild(e,1)?new_type_nil():{pattern:TYPE_I8,number:e.readInt8()};case TYPE_U16:return td_check_unvaild(e,2)?new_type_nil():{pattern:TYPE_U16,number:e.readUint16()};case TYPE_I16:return td_check_unvaild(e,2)?new_type_nil():{pattern:TYPE_I16,number:e.readInt16()};case TYPE_U32:return td_check_unvaild(e,4)?new_type_nil():{pattern:TYPE_U32,number:e.readUint32()};case TYPE_I32:return td_check_unvaild(e,4)?new_type_nil():{pattern:TYPE_I32,number:e.readInt32()};case TYPE_FLOAT:return td_check_unvaild(e,4)?new_type_nil():{pattern:TYPE_FLOAT,number:e.readInt32()/1e3};default:throw new Error("Unknow decode number type")}}function decode_str_raw(e,t){switch(t){case TYPE_STR:if(td_check_unvaild(e,2))return new_type_nil();var r=decode_number(e,TYPE_U16).number;if(0==r)return{pattern:TYPE_STR,str:""};if(td_check_unvaild(e,r))return new_type_nil();var n=e.readBytes(r);return{pattern:TYPE_STR,str:n.toUTF8()};case TYPE_RAW:if(td_check_unvaild(e,2))return new_type_nil();var r=decode_number(e,TYPE_U16).number;if(0==r)return{pattern:TYPE_RAW,str:""};if(td_check_unvaild(e,r))return new_type_nil();var n=e.readBytes(r);return{pattern:TYPE_STR,str:n.toUTF8()};default:throw new Error("Unknow decode str type")}}function read_field(e){if(td_check_unvaild(e,4))return new_type_nil();var t=decode_number(e,TYPE_U16),r=decode_number(e,TYPE_U16);return{index:t.number,pattern:r.number}}function decode_by_field(e,t,r){var n=r.pattern;switch(n){case TYPE_U8:case TYPE_I8:case TYPE_U16:case TYPE_I16:case TYPE_U32:case TYPE_I32:case TYPE_FLOAT:return decode_number(e,n);case TYPE_STR:case TYPE_RAW:return decode_str_raw(e,n);case TYPE_MAP:return decode_map(e,t);case TYPE_AU8:case TYPE_AI8:case TYPE_AU16:case TYPE_AI16:case TYPE_AU32:case TYPE_AI32:case TYPE_AFLOAT:case TYPE_ASTR:case TYPE_ARAW:case TYPE_AMAP:for(var i=[];;){var a=decode_field(e,t);if(a.pattern==TYPE_NIL)break;i.push(td_into_value(a))}return{pattern:n,list:i};default:return new_type_nil()}}function decode_field(e,t){var r=read_field(e);return r&&r.pattern!=TYPE_NIL?decode_by_field(e,t,r):{pattern:TYPE_NIL}}function decode_map(e,t){for(var r={};;){var n=read_field(e);if(n.pattern==TYPE_NIL)break;var i=td_into_value(decode_field(e,t)),a=get_field_index_name(t,n.index);IsNull(i)||IsNull(a)||(r[a]=i)}return{pattern:TYPE_MAP,map:r}}function decode_proto(e,t){for(var r=decode_str_raw(e,TYPE_STR).str,n=[];;){var i=decode_field(e,t);if(i.pattern==TYPE_NIL)break;n.push(td_into_value(i))}var a=get_proto_by_name(t,r);return a?a.args.length!=n.length?null:{proto:r,list:n}:null}function encode_number(e,t){var r=parseInt(t.number);if(!t.pattern||IsNull(r))throw new Error("unkown encode number");switch(t.pattern){case TYPE_U8:e.writeUint8(r);break;case TYPE_I8:e.writeInt8(r);break;case TYPE_U16:e.writeUint16(r);break;case TYPE_I16:e.writeInt16(r);break;case TYPE_U32:e.writeUint32(r);break;case TYPE_I32:e.writeInt32(r);break;case TYPE_FLOAT:e.writeInt32(parseInt(1e3*parseFloat(t.number)));break;default:throw new Error("unkown encode number")}}function encode_str_raw(e,t){var r=t.pattern;switch(r){case TYPE_STR:encode_number(e,{pattern:TYPE_U16,number:ByteBuffer.calculateString(t.str)}),e.writeString(t.str);break;case TYPE_RAW:encode_number(e,{pattern:TYPE_U16,number:ByteBuffer.calculateString(t.raw)}),e.writeString(t.raw);break;default:throw new Error("unkown str")}}function encode_map(e,t,r){var n=r.pattern;switch(n){case TYPE_MAP:var i=r.map;for(var a in i){var s=get_field_by_name(t,a);s&&!IsNull(i[a])&&(write_field(e,s),encode_field(e,t,td_from_value(i[a],s.pattern)))}write_str_field(e,STR_TYPE_NIL);break;default:throw new Error("unkown str")}}function write_field(e,t){return!!t&&(encode_number(e,{pattern:TYPE_U16,number:t.index}),encode_number(e,{pattern:TYPE_U16,number:t.pattern}),!0)}function write_str_field(e,t){return encode_number(e,{pattern:TYPE_U16,number:0}),encode_number(e,{pattern:TYPE_U16,number:get_type_by_name(t)}),!0}function encode_field(e,t,r){switch(write_str_field(e,get_name_by_type(r.pattern)),r.pattern){case TYPE_U8:case TYPE_I8:case TYPE_U16:case TYPE_I16:case TYPE_U32:case TYPE_I32:case TYPE_FLOAT:encode_number(e,r);break;case TYPE_STR:case TYPE_RAW:encode_str_raw(e,r);break;case TYPE_MAP:encode_map(e,t,r);break;case TYPE_AU8:case TYPE_AI8:case TYPE_AU16:case TYPE_AI16:case TYPE_AU32:case TYPE_AI32:case TYPE_AFLOAT:case TYPE_ASTR:case TYPE_ARAW:case TYPE_AMAP:for(var n=get_array_contains_type(r),i=r.list,a=0;a<i.length;a++)encode_field(e,t,td_from_value(i[a],n));write_str_field(e,STR_TYPE_NIL);default:return!1}return!0}function encode_proto(e,t,r,n){var i=get_proto_by_name(t,r);if(!i)return!1;if(i.args.length!=n.length)return!1;encode_str_raw(e,{pattern:TYPE_STR,str:r});for(var a=0;a<n.length;a++)if(!encode_field(e,t,td_from_value(n[a],get_type_by_name(i.args[a]))))return!1;return write_str_field(e,STR_TYPE_NIL),!0}function get_type_by_name(e){switch(e){case STR_TYPE_NIL:return TYPE_NIL;case STR_TYPE_U8:return TYPE_U8;case STR_TYPE_I8:return TYPE_I8;case STR_TYPE_U16:return TYPE_U16;case STR_TYPE_I16:return TYPE_I16;case STR_TYPE_U32:return TYPE_U32;case STR_TYPE_I32:return TYPE_I32;case STR_TYPE_FLOAT:return TYPE_FLOAT;case STR_TYPE_STR:return TYPE_STR;case STR_TYPE_RAW:return TYPE_RAW;case STR_TYPE_MAP:return TYPE_MAP;case STR_TYPE_AU8:return TYPE_AU8;case STR_TYPE_AI8:return TYPE_AI8;case STR_TYPE_AU16:return TYPE_AU16;case STR_TYPE_AI16:return TYPE_AI16;case STR_TYPE_AU32:return TYPE_AU32;case STR_TYPE_AI32:return TYPE_AI32;case STR_TYPE_AFLOAT:return TYPE_AFLOAT;case STR_TYPE_ASTR:return TYPE_ASTR;case STR_TYPE_ARAW:return TYPE_ARAW;case STR_TYPE_AMAP:return TYPE_AMAP;default:return TYPE_NIL}}function get_name_by_type(e){switch(e){case TYPE_NIL:return STR_TYPE_NIL;case TYPE_U8:return STR_TYPE_U8;case TYPE_I8:return STR_TYPE_I8;case TYPE_U16:return STR_TYPE_U16;case TYPE_I16:return STR_TYPE_I16;case TYPE_U32:return STR_TYPE_U32;case TYPE_I32:return STR_TYPE_I32;case TYPE_FLOAT:return STR_TYPE_FLOAT;case TYPE_STR:return STR_TYPE_STR;case TYPE_RAW:return STR_TYPE_RAW;case TYPE_MAP:return STR_TYPE_MAP;case TYPE_AU8:return STR_TYPE_AU8;case TYPE_AI8:return STR_TYPE_AI8;case TYPE_AU16:return STR_TYPE_AU16;case TYPE_AI16:return STR_TYPE_AI16;case TYPE_AU32:return STR_TYPE_AU32;case TYPE_AI32:return STR_TYPE_AI32;case TYPE_AFLOAT:return STR_TYPE_AFLOAT;case TYPE_ASTR:return STR_TYPE_ASTR;case TYPE_ARAW:return STR_TYPE_ARAW;case TYPE_AMAP:return STR_TYPE_AMAP;default:return STR_TYPE_NIL}}function get_array_contains_type(e){return e.pattern-TYPE_STEP}function HttpNetworkRequest(e,t){function r(e,r){t&&(t(e,r),t=null)}var n=new XMLHttpRequest,i=e.method||"GET",a=e.url;t=t||e.callback,n.onreadystatechange=function(){if(4==n.readyState){if(n.status<200||n.status>207)return void r("接收数据出错");r(null,n.responseText)}},n.onabort=function(){r("连接已取消")},n.ontimeout=function(){r("连接超时")},n.onerror=function(e){r("连接错误")},n.open(i,a),e.timeout&&(n.timeout=e.timeout),n.setRequestHeader("Content-Type","text/plain;charset=UTF-8"),n.send(e.data)}function request4Http(e,t,r,n){var i={method:n||"POST",timeout:5e3,url:GAME_WEB_URL+GAME_WEB_PORT+e,data:JSON.stringify(t)};HttpNetworkRequest(i,function(e,t){if(e)return void ModuleMgr.showTipMsg(e);var n=ConvertToJson(t);return n.ret==-1?void ModuleMgr.showTipMsg(n.err_msg):void r(n)})}function requestWaiting4Http(e,t,r,n,i){var a=GAME_WEB_PORT;1==t.ignorePort&&(a="");var s={method:i||"POST",timeout:5e3,url:GAME_WEB_URL+a+e,data:JSON.stringify(t)};n=n||"",ModuleMgr.showWaitMsg(n,0),HttpNetworkRequest(s,function(e,t){if(ModuleMgr.removeWaitMsg(),e)return void ModuleMgr.showTipMsg(e);var n=ConvertToJson(t);return n.ret==-1?void ModuleMgr.showTipMsg(n.err_msg):void r(n)})}var ByteBuffer=function(e,t,r){if("undefined"==typeof e&&(e=ByteBuffer.DEFAULT_CAPACITY),"undefined"==typeof t&&(t=ByteBuffer.DEFAULT_ENDIAN),"undefined"==typeof r&&(r=ByteBuffer.DEFAULT_NOASSERT),!r){if(e|=0,e<0)throw RangeError("Illegal capacity");t=!!t,r=!!r}this.buffer=0===e?EMPTY_BUFFER:new ArrayBuffer(e),this.view=0===e?null:new Uint8Array(this.buffer),this.offset=0,this.markedOffset=-1,this.limit=e,this.littleEndian=t,this.noAssert=r};ByteBuffer.VERSION="5.0.1",ByteBuffer.LITTLE_ENDIAN=!0,ByteBuffer.BIG_ENDIAN=!1,ByteBuffer.DEFAULT_CAPACITY=16,ByteBuffer.DEFAULT_ENDIAN=ByteBuffer.BIG_ENDIAN,ByteBuffer.DEFAULT_NOASSERT=!1;var ByteBufferPrototype=ByteBuffer.prototype;ByteBufferPrototype.__isByteBuffer__,Object.defineProperty(ByteBufferPrototype,"__isByteBuffer__",{value:!0,enumerable:!1,configurable:!1});var EMPTY_BUFFER=new ArrayBuffer(0),stringFromCharCode=String.fromCharCode;ByteBuffer.accessor=function(){return Uint8Array},ByteBuffer.allocate=function(e,t,r){return new ByteBuffer(e,t,r)},ByteBuffer.concat=function(e,t,r,n){"boolean"!=typeof t&&"string"==typeof t||(n=r,r=t,t=void 0);for(var i,a=0,s=0,o=e.length;s<o;++s)ByteBuffer.isByteBuffer(e[s])||(e[s]=ByteBuffer.wrap(e[s],t)),i=e[s].limit-e[s].offset,i>0&&(a+=i);if(0===a)return new ByteBuffer(0,r,n);var f,u=new ByteBuffer(a,r,n);for(s=0;s<o;)f=e[s++],i=f.limit-f.offset,i<=0||(u.view.set(f.view.subarray(f.offset,f.limit),u.offset),u.offset+=i);return u.limit=u.offset,u.offset=0,u},ByteBuffer.isByteBuffer=function(e){return(e&&e.__isByteBuffer__)===!0},ByteBuffer.type=function(){return ArrayBuffer},ByteBuffer.wrap=function(e,t,r,n){if("string"!=typeof t&&(n=r,r=t,t=void 0),"string"==typeof e)switch("undefined"==typeof t&&(t="utf8"),t){case"hex":return ByteBuffer.fromHex(e,r);case"binary":return ByteBuffer.fromBinary(e,r);case"utf8":return ByteBuffer.fromUTF8(e,r);default:throw Error("Unsupported encoding: "+t)}if(null===e||"object"!=typeof e)throw TypeError("Illegal buffer");var i;if(ByteBuffer.isByteBuffer(e))return i=ByteBufferPrototype.clone.call(e),i.markedOffset=-1,i;if(e instanceof Uint8Array)i=new ByteBuffer(0,r,n),e.length>0&&(i.buffer=e.buffer,i.offset=e.byteOffset,i.limit=e.byteOffset+e.byteLength,i.view=new Uint8Array(e.buffer));else if(e instanceof ArrayBuffer)i=new ByteBuffer(0,r,n),e.byteLength>0&&(i.buffer=e,i.offset=0,i.limit=e.byteLength,i.view=e.byteLength>0?new Uint8Array(e):null);else{if("[object Array]"!==Object.prototype.toString.call(e))throw TypeError("Illegal buffer");i=new ByteBuffer(e.length,r,n),i.limit=e.length;for(var a=0;a<e.length;++a)i.view[a]=e[a]}return i},ByteBufferPrototype.writeBitSet=function(e,t){var r="undefined"==typeof t;if(r&&(t=this.offset),!this.noAssert){if(!(e instanceof Array))throw TypeError("Illegal BitSet: Not an array");if("number"!=typeof t||t%1!==0)throw TypeError("Illegal offset: "+t+" (not an integer)");if(t>>>=0,t<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}var n,i=t,a=e.length,s=a>>3,o=0;for(t+=this.writeVarint32(a,t);s--;)n=1&!!e[o++]|(1&!!e[o++])<<1|(1&!!e[o++])<<2|(1&!!e[o++])<<3|(1&!!e[o++])<<4|(1&!!e[o++])<<5|(1&!!e[o++])<<6|(1&!!e[o++])<<7,this.writeByte(n,t++);if(o<a){var f=0;for(n=0;o<a;)n|=(1&!!e[o++])<<f++;this.writeByte(n,t++)}return r?(this.offset=t,this):t-i},ByteBufferPrototype.readBitSet=function(e){var t="undefined"==typeof e;t&&(e=this.offset);var r,n=this.readVarint32(e),i=n.value,a=i>>3,s=0,o=[];for(e+=n.length;a--;)r=this.readByte(e++),o[s++]=!!(1&r),o[s++]=!!(2&r),o[s++]=!!(4&r),o[s++]=!!(8&r),o[s++]=!!(16&r),o[s++]=!!(32&r),o[s++]=!!(64&r),o[s++]=!!(128&r);if(s<i){var f=0;for(r=this.readByte(e++);s<i;)o[s++]=!!(r>>f++&1)}return t&&(this.offset=e),o},ByteBufferPrototype.readBytes=function(e,t){var r="undefined"==typeof t;if(r&&(t=this.offset),!this.noAssert){if("number"!=typeof t||t%1!==0)throw TypeError("Illegal offset: "+t+" (not an integer)");if(t>>>=0,t<0||t+e>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+"+e+") <= "+this.buffer.byteLength)}var n=this.slice(t,t+e);return r&&(this.offset+=e),n},ByteBufferPrototype.writeBytes=ByteBufferPrototype.append,ByteBufferPrototype.writeInt8=function(e,t){var r="undefined"==typeof t;if(r&&(t=this.offset),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!==0)throw TypeError("Illegal offset: "+t+" (not an integer)");if(t>>>=0,t<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=1;var n=this.buffer.byteLength;return t>n&&this.resize((n*=2)>t?n:t),t-=1,this.view[t]=e,r&&(this.offset+=1),this},ByteBufferPrototype.writeByte=ByteBufferPrototype.writeInt8,ByteBufferPrototype.readInt8=function(e){var t="undefined"==typeof e;if(t&&(e=this.offset),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal offset: "+e+" (not an integer)");if(e>>>=0,e<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var r=this.view[e];return 128===(128&r)&&(r=-(255-r+1)),t&&(this.offset+=1),r},ByteBufferPrototype.readByte=ByteBufferPrototype.readInt8,ByteBufferPrototype.writeUint8=function(e,t){var r="undefined"==typeof t;if(r&&(t=this.offset),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e>>>=0,"number"!=typeof t||t%1!==0)throw TypeError("Illegal offset: "+t+" (not an integer)");if(t>>>=0,t<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=1;var n=this.buffer.byteLength;return t>n&&this.resize((n*=2)>t?n:t),t-=1,this.view[t]=e,r&&(this.offset+=1),this},ByteBufferPrototype.writeUInt8=ByteBufferPrototype.writeUint8,ByteBufferPrototype.readUint8=function(e){var t="undefined"==typeof e;if(t&&(e=this.offset),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal offset: "+e+" (not an integer)");if(e>>>=0,e<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var r=this.view[e];return t&&(this.offset+=1),r},ByteBufferPrototype.readUInt8=ByteBufferPrototype.readUint8,ByteBufferPrototype.writeInt16=function(e,t){var r="undefined"==typeof t;if(r&&(t=this.offset),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!==0)throw TypeError("Illegal offset: "+t+" (not an integer)");if(t>>>=0,t<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=2;var n=this.buffer.byteLength;return t>n&&this.resize((n*=2)>t?n:t),t-=2,this.littleEndian?(this.view[t+1]=(65280&e)>>>8,this.view[t]=255&e):(this.view[t]=(65280&e)>>>8,this.view[t+1]=255&e),r&&(this.offset+=2),this},ByteBufferPrototype.writeShort=ByteBufferPrototype.writeInt16,ByteBufferPrototype.readInt16=function(e){var t="undefined"==typeof e;if(t&&(e=this.offset),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal offset: "+e+" (not an integer)");if(e>>>=0,e<0||e+2>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+2) <= "+this.buffer.byteLength)}var r=0;return this.littleEndian?(r=this.view[e],r|=this.view[e+1]<<8):(r=this.view[e]<<8,r|=this.view[e+1]),32768===(32768&r)&&(r=-(65535-r+1)),t&&(this.offset+=2),r},ByteBufferPrototype.readShort=ByteBufferPrototype.readInt16,ByteBufferPrototype.writeUint16=function(e,t){var r="undefined"==typeof t;if(r&&(t=this.offset),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e>>>=0,"number"!=typeof t||t%1!==0)throw TypeError("Illegal offset: "+t+" (not an integer)");if(t>>>=0,t<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=2;var n=this.buffer.byteLength;return t>n&&this.resize((n*=2)>t?n:t),t-=2,this.littleEndian?(this.view[t+1]=(65280&e)>>>8,this.view[t]=255&e):(this.view[t]=(65280&e)>>>8,this.view[t+1]=255&e),r&&(this.offset+=2),this},ByteBufferPrototype.writeUInt16=ByteBufferPrototype.writeUint16,ByteBufferPrototype.readUint16=function(e){var t="undefined"==typeof e;if(t&&(e=this.offset),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal offset: "+e+" (not an integer)");if(e>>>=0,e<0||e+2>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+2) <= "+this.buffer.byteLength)}var r=0;return this.littleEndian?(r=this.view[e],r|=this.view[e+1]<<8):(r=this.view[e]<<8,r|=this.view[e+1]),t&&(this.offset+=2),r},ByteBufferPrototype.readUInt16=ByteBufferPrototype.readUint16,ByteBufferPrototype.writeInt32=function(e,t){var r="undefined"==typeof t;if(r&&(t=this.offset),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!==0)throw TypeError("Illegal offset: "+t+" (not an integer)");if(t>>>=0,t<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=4;var n=this.buffer.byteLength;return t>n&&this.resize((n*=2)>t?n:t),t-=4,this.littleEndian?(this.view[t+3]=e>>>24&255,this.view[t+2]=e>>>16&255,this.view[t+1]=e>>>8&255,this.view[t]=255&e):(this.view[t]=e>>>24&255,this.view[t+1]=e>>>16&255,this.view[t+2]=e>>>8&255,this.view[t+3]=255&e),r&&(this.offset+=4),this},ByteBufferPrototype.writeInt=ByteBufferPrototype.writeInt32,ByteBufferPrototype.readInt32=function(e){var t="undefined"==typeof e;if(t&&(e=this.offset),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal offset: "+e+" (not an integer)");if(e>>>=0,e<0||e+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+4) <= "+this.buffer.byteLength)}var r=0;return this.littleEndian?(r=this.view[e+2]<<16,r|=this.view[e+1]<<8,r|=this.view[e],r+=this.view[e+3]<<24>>>0):(r=this.view[e+1]<<16,r|=this.view[e+2]<<8,r|=this.view[e+3],r+=this.view[e]<<24>>>0),r|=0,t&&(this.offset+=4),r},ByteBufferPrototype.readInt=ByteBufferPrototype.readInt32,ByteBufferPrototype.writeUint32=function(e,t){var r="undefined"==typeof t;if(r&&(t=this.offset),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e>>>=0,"number"!=typeof t||t%1!==0)throw TypeError("Illegal offset: "+t+" (not an integer)");if(t>>>=0,t<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=4;var n=this.buffer.byteLength;return t>n&&this.resize((n*=2)>t?n:t),t-=4,this.littleEndian?(this.view[t+3]=e>>>24&255,this.view[t+2]=e>>>16&255,this.view[t+1]=e>>>8&255,this.view[t]=255&e):(this.view[t]=e>>>24&255,this.view[t+1]=e>>>16&255,this.view[t+2]=e>>>8&255,this.view[t+3]=255&e),r&&(this.offset+=4),this},ByteBufferPrototype.writeUInt32=ByteBufferPrototype.writeUint32,ByteBufferPrototype.readUint32=function(e){var t="undefined"==typeof e;if(t&&(e=this.offset),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal offset: "+e+" (not an integer)");if(e>>>=0,e<0||e+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+4) <= "+this.buffer.byteLength)}var r=0;return this.littleEndian?(r=this.view[e+2]<<16,r|=this.view[e+1]<<8,r|=this.view[e],r+=this.view[e+3]<<24>>>0):(r=this.view[e+1]<<16,r|=this.view[e+2]<<8,r|=this.view[e+3],r+=this.view[e]<<24>>>0),t&&(this.offset+=4),r},ByteBufferPrototype.readUInt32=ByteBufferPrototype.readUint32,ByteBufferPrototype.writeFloat32=function(e,t){var r="undefined"==typeof t;if(r&&(t=this.offset),!this.noAssert){if("number"!=typeof e)throw TypeError("Illegal value: "+e+" (not a number)");if("number"!=typeof t||t%1!==0)throw TypeError("Illegal offset: "+t+" (not an integer)");if(t>>>=0,t<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=4;var n=this.buffer.byteLength;return t>n&&this.resize((n*=2)>t?n:t),t-=4,ieee754_write(this.view,e,t,this.littleEndian,23,4),r&&(this.offset+=4),this},ByteBufferPrototype.writeFloat=ByteBufferPrototype.writeFloat32,ByteBufferPrototype.readFloat32=function(e){var t="undefined"==typeof e;if(t&&(e=this.offset),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal offset: "+e+" (not an integer)");if(e>>>=0,e<0||e+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+4) <= "+this.buffer.byteLength)}var r=ieee754_read(this.view,e,this.littleEndian,23,4);return t&&(this.offset+=4),r},ByteBufferPrototype.readFloat=ByteBufferPrototype.readFloat32,ByteBufferPrototype.writeFloat64=function(e,t){var r="undefined"==typeof t;if(r&&(t=this.offset),!this.noAssert){if("number"!=typeof e)throw TypeError("Illegal value: "+e+" (not a number)");if("number"!=typeof t||t%1!==0)throw TypeError("Illegal offset: "+t+" (not an integer)");if(t>>>=0,t<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}t+=8;var n=this.buffer.byteLength;return t>n&&this.resize((n*=2)>t?n:t),t-=8,ieee754_write(this.view,e,t,this.littleEndian,52,8),r&&(this.offset+=8),this},ByteBufferPrototype.writeDouble=ByteBufferPrototype.writeFloat64,ByteBufferPrototype.readFloat64=function(e){var t="undefined"==typeof e;if(t&&(e=this.offset),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal offset: "+e+" (not an integer)");if(e>>>=0,e<0||e+8>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+8) <= "+this.buffer.byteLength)}var r=ieee754_read(this.view,e,this.littleEndian,52,8);return t&&(this.offset+=8),r},ByteBufferPrototype.readDouble=ByteBufferPrototype.readFloat64,ByteBuffer.METRICS_CHARS="c",ByteBuffer.METRICS_BYTES="b",ByteBufferPrototype.writeUTF8String=function(e,t){var r="undefined"==typeof t;if(r&&(t=this.offset),!this.noAssert){if("number"!=typeof t||t%1!==0)throw TypeError("Illegal offset: "+t+" (not an integer)");if(t>>>=0,t<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}var n,i=t;n=utfx.calculateUTF16asUTF8(stringSource(e))[1],t+=n;var a=this.buffer.byteLength;return t>a&&this.resize((a*=2)>t?a:t),t-=n,utfx.encodeUTF16toUTF8(stringSource(e),function(e){this.view[t++]=e}.bind(this)),r?(this.offset=t,this):t-i},ByteBufferPrototype.writeString=ByteBufferPrototype.writeUTF8String,ByteBuffer.calculateUTF8Chars=function(e){return utfx.calculateUTF16asUTF8(stringSource(e))[0]},ByteBuffer.calculateUTF8Bytes=function(e){return utfx.calculateUTF16asUTF8(stringSource(e))[1]},ByteBuffer.calculateString=ByteBuffer.calculateUTF8Bytes,ByteBufferPrototype.readUTF8String=function(e,t,r){"number"==typeof t&&(r=t,t=void 0);var n="undefined"==typeof r;if(n&&(r=this.offset),"undefined"==typeof t&&(t=ByteBuffer.METRICS_CHARS),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal length: "+e+" (not an integer)");if(e|=0,"number"!=typeof r||r%1!==0)throw TypeError("Illegal offset: "+r+" (not an integer)");if(r>>>=0,r<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}var i,a=0,s=r;if(t===ByteBuffer.METRICS_CHARS){if(i=stringDestination(),utfx.decodeUTF8(function(){return a<e&&r<this.limit?this.view[r++]:null}.bind(this),function(e){++a,utfx.UTF8toUTF16(e,i)}),a!==e)throw RangeError("Illegal range: Truncated data, "+a+" == "+e);return n?(this.offset=r,i()):{string:i(),length:r-s}}if(t===ByteBuffer.METRICS_BYTES){if(!this.noAssert){if("number"!=typeof r||r%1!==0)throw TypeError("Illegal offset: "+r+" (not an integer)");if(r>>>=0,r<0||r+e>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+"+e+") <= "+this.buffer.byteLength)}var o=r+e;if(utfx.decodeUTF8toUTF16(function(){return r<o?this.view[r++]:null}.bind(this),i=stringDestination(),this.noAssert),r!==o)throw RangeError("Illegal range: Truncated data, "+r+" == "+o);return n?(this.offset=r,i()):{string:i(),length:r-s}}throw TypeError("Unsupported metrics: "+t)},ByteBufferPrototype.readString=ByteBufferPrototype.readUTF8String,ByteBufferPrototype.append=function(e,t,r){"number"!=typeof t&&"string"==typeof t||(r=t,t=void 0);var n="undefined"==typeof r;if(n&&(r=this.offset),!this.noAssert){if("number"!=typeof r||r%1!==0)throw TypeError("Illegal offset: "+r+" (not an integer)");if(r>>>=0,r<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}e instanceof ByteBuffer||(e=ByteBuffer.wrap(e,t));var i=e.limit-e.offset;if(i<=0)return this;r+=i;var a=this.buffer.byteLength;return r>a&&this.resize((a*=2)>r?a:r),r-=i,this.view.set(e.view.subarray(e.offset,e.limit),r),e.offset+=i,n&&(this.offset+=i),this},ByteBufferPrototype.appendTo=function(e,t){return e.append(this,t),this},ByteBufferPrototype.assert=function(e){return this.noAssert=!e,this},ByteBufferPrototype.capacity=function(){return this.buffer.byteLength},ByteBufferPrototype.clear=function(){return this.offset=0,this.limit=this.buffer.byteLength,this.markedOffset=-1,this},ByteBufferPrototype.clone=function(e){var t=new ByteBuffer(0,this.littleEndian,this.noAssert);return e?(t.buffer=new ArrayBuffer(this.buffer.byteLength),t.view=new Uint8Array(t.buffer)):(t.buffer=this.buffer,t.view=this.view),t.offset=this.offset,t.markedOffset=this.markedOffset,t.limit=this.limit,t},ByteBufferPrototype.compact=function(e,t){if("undefined"==typeof e&&(e=this.offset),"undefined"==typeof t&&(t=this.limit),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!==0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}if(0===e&&t===this.buffer.byteLength)return this;var r=t-e;if(0===r)return this.buffer=EMPTY_BUFFER,this.view=null,this.markedOffset>=0&&(this.markedOffset-=e),this.offset=0,this.limit=0,this;var n=new ArrayBuffer(r),i=new Uint8Array(n);return i.set(this.view.subarray(e,t)),this.buffer=n,this.view=i,this.markedOffset>=0&&(this.markedOffset-=e),this.offset=0,this.limit=r,this},ByteBufferPrototype.copy=function(e,t){if("undefined"==typeof e&&(e=this.offset),"undefined"==typeof t&&(t=this.limit),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!==0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}if(e===t)return new ByteBuffer(0,this.littleEndian,this.noAssert);var r=t-e,n=new ByteBuffer(r,this.littleEndian,this.noAssert);return n.offset=0,n.limit=r,n.markedOffset>=0&&(n.markedOffset-=e),this.copyTo(n,0,e,t),n},ByteBufferPrototype.copyTo=function(e,t,r,n){var i,a;if(!this.noAssert&&!ByteBuffer.isByteBuffer(e))throw TypeError("Illegal target: Not a ByteBuffer");if(t=(a="undefined"==typeof t)?e.offset:0|t,r=(i="undefined"==typeof r)?this.offset:0|r,n="undefined"==typeof n?this.limit:0|n,t<0||t>e.buffer.byteLength)throw RangeError("Illegal target range: 0 <= "+t+" <= "+e.buffer.byteLength);if(r<0||n>this.buffer.byteLength)throw RangeError("Illegal source range: 0 <= "+r+" <= "+this.buffer.byteLength);var s=n-r;return 0===s?e:(e.ensureCapacity(t+s),e.view.set(this.view.subarray(r,n),t),i&&(this.offset+=s),a&&(e.offset+=s),this)},ByteBufferPrototype.ensureCapacity=function(e){var t=this.buffer.byteLength;return t<e?this.resize((t*=2)>e?t:e):this},ByteBufferPrototype.fill=function(e,t,r){var n="undefined"==typeof t;if(n&&(t=this.offset),"string"==typeof e&&e.length>0&&(e=e.charCodeAt(0)),"undefined"==typeof t&&(t=this.offset),"undefined"==typeof r&&(r=this.limit),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal value: "+e+" (not an integer)");if(e|=0,"number"!=typeof t||t%1!==0)throw TypeError("Illegal begin: Not an integer");if(t>>>=0,"number"!=typeof r||r%1!==0)throw TypeError("Illegal end: Not an integer");if(r>>>=0,t<0||t>r||r>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+t+" <= "+r+" <= "+this.buffer.byteLength)}if(t>=r)return this;for(;t<r;)this.view[t++]=e;return n&&(this.offset=t),this},ByteBufferPrototype.flip=function(){return this.limit=this.offset,this.offset=0,this},ByteBufferPrototype.mark=function(e){if(e="undefined"==typeof e?this.offset:e,!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal offset: "+e+" (not an integer)");if(e>>>=0,e<0||e+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+0) <= "+this.buffer.byteLength)}return this.markedOffset=e,this},ByteBufferPrototype.order=function(e){if(!this.noAssert&&"boolean"!=typeof e)throw TypeError("Illegal littleEndian: Not a boolean");return this.littleEndian=!!e,this},ByteBufferPrototype.LE=function(e){return this.littleEndian="undefined"==typeof e||!!e,this},ByteBufferPrototype.BE=function(e){return this.littleEndian="undefined"!=typeof e&&!e,this},ByteBufferPrototype.prepend=function(e,t,r){"number"!=typeof t&&"string"==typeof t||(r=t,t=void 0);var n="undefined"==typeof r;if(n&&(r=this.offset),!this.noAssert){if("number"!=typeof r||r%1!==0)throw TypeError("Illegal offset: "+r+" (not an integer)");
if(r>>>=0,r<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}e instanceof ByteBuffer||(e=ByteBuffer.wrap(e,t));var i=e.limit-e.offset;if(i<=0)return this;var a=i-r;if(a>0){var s=new ArrayBuffer(this.buffer.byteLength+a),o=new Uint8Array(s);o.set(this.view.subarray(r,this.buffer.byteLength),i),this.buffer=s,this.view=o,this.offset+=a,this.markedOffset>=0&&(this.markedOffset+=a),this.limit+=a,r+=a}else{new Uint8Array(this.buffer)}return this.view.set(e.view.subarray(e.offset,e.limit),r-i),e.offset=e.limit,n&&(this.offset-=i),this},ByteBufferPrototype.prependTo=function(e,t){return e.prepend(this,t),this},ByteBufferPrototype.remaining=function(){return this.limit-this.offset},ByteBufferPrototype.reset=function(){return this.markedOffset>=0?(this.offset=this.markedOffset,this.markedOffset=-1):this.offset=0,this},ByteBufferPrototype.resize=function(e){if(!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal capacity: "+e+" (not an integer)");if(e|=0,e<0)throw RangeError("Illegal capacity: 0 <= "+e)}if(this.buffer.byteLength<e){var t=new ArrayBuffer(e),r=new Uint8Array(t);r.set(this.view),this.buffer=t,this.view=r,this.limit=this.buffer.byteLength}return this},ByteBufferPrototype.reverse=function(e,t){if("undefined"==typeof e&&(e=this.offset),"undefined"==typeof t&&(t=this.limit),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!==0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}return e===t?this:(Array.prototype.reverse.call(this.view.subarray(e,t)),this)},ByteBufferPrototype.skip=function(e){if(!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal length: "+e+" (not an integer)");e|=0}var t=this.offset+e;if(!this.noAssert&&(t<0||t>this.buffer.byteLength))throw RangeError("Illegal length: 0 <= "+this.offset+" + "+e+" <= "+this.buffer.byteLength);return this.offset=t,this},ByteBufferPrototype.slice=function(e,t){if("undefined"==typeof e&&(e=this.offset),"undefined"==typeof t&&(t=this.limit),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!==0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}var r=this.clone();return r.offset=e,r.limit=t,r},ByteBufferPrototype.toBuffer=function(e){var t=this.offset,r=this.limit;if(!this.noAssert){if("number"!=typeof t||t%1!==0)throw TypeError("Illegal offset: Not an integer");if(t>>>=0,"number"!=typeof r||r%1!==0)throw TypeError("Illegal limit: Not an integer");if(r>>>=0,t<0||t>r||r>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+t+" <= "+r+" <= "+this.buffer.byteLength)}if(!e&&0===t&&r===this.buffer.byteLength)return this.buffer;if(t===r)return EMPTY_BUFFER;var n=new ArrayBuffer(r-t);return new Uint8Array(n).set(new Uint8Array(this.buffer).subarray(t,r),0),n},ByteBufferPrototype.toArrayBuffer=ByteBufferPrototype.toBuffer,ByteBufferPrototype.toString=function(e,t,r){if("undefined"==typeof e)return"ByteBufferAB(offset="+this.offset+",markedOffset="+this.markedOffset+",limit="+this.limit+",capacity="+this.capacity()+")";switch("number"==typeof e&&(e="utf8",t=e,r=t),e){case"utf8":return this.toUTF8(t,r);case"hex":return this.toHex(t,r);case"binary":return this.toBinary(t,r);case"columns":return this.toColumns();default:throw Error("Unsupported encoding: "+e)}},ByteBufferPrototype.toBinary=function(e,t){if("undefined"==typeof e&&(e=this.offset),"undefined"==typeof t&&(t=this.limit),e|=0,t|=0,e<0||t>this.capacity()||e>t)throw RangeError("begin, end");if(e===t)return"";for(var r=[],n=[];e<t;)r.push(this.view[e++]),r.length>=1024&&(n.push(String.fromCharCode.apply(String,r)),r=[]);return n.join("")+String.fromCharCode.apply(String,r)},ByteBuffer.fromBinary=function(e,t){if("string"!=typeof e)throw TypeError("str");for(var r,n=0,i=e.length,a=new ByteBuffer(i,t);n<i;){if(r=e.charCodeAt(n),r>255)throw RangeError("illegal char code: "+r);a.view[n++]=r}return a.limit=i,a},ByteBufferPrototype.toHex=function(e,t){if(e="undefined"==typeof e?this.offset:e,t="undefined"==typeof t?this.limit:t,!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!==0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}for(var r,n=new Array(t-e);e<t;)r=this.view[e++],r<16?n.push("0",r.toString(16)):n.push(r.toString(16));return n.join("")},ByteBuffer.fromHex=function(e,t,r){if(!r){if("string"!=typeof e)throw TypeError("Illegal str: Not a string");if(e.length%2!==0)throw TypeError("Illegal str: Length not a multiple of 2")}for(var n,i=e.length,a=new ByteBuffer(i/2|0,t),s=0,o=0;s<i;s+=2){if(n=parseInt(e.substring(s,s+2),16),!r&&(!isFinite(n)||n<0||n>255))throw TypeError("Illegal str: Contains non-hex characters");a.view[o++]=n}return a.limit=o,a};var utfx=function(){"use strict";var e={};return e.MAX_CODEPOINT=1114111,e.encodeUTF8=function(e,t){var r=null;for("number"==typeof e&&(r=e,e=function(){return null});null!==r||null!==(r=e());)r<128?t(127&r):r<2048?(t(r>>6&31|192),t(63&r|128)):r<65536?(t(r>>12&15|224),t(r>>6&63|128),t(63&r|128)):(t(r>>18&7|240),t(r>>12&63|128),t(r>>6&63|128),t(63&r|128)),r=null},e.decodeUTF8=function(e,t){for(var r,n,i,a,s=function(e){e=e.slice(0,e.indexOf(null));var t=Error(e.toString());throw t.name="TruncatedError",t.bytes=e,t};null!==(r=e());)if(0===(128&r))t(r);else if(192===(224&r))null===(n=e())&&s([r,n]),t((31&r)<<6|63&n);else if(224===(240&r))(null===(n=e())||null===(i=e()))&&s([r,n,i]),t((15&r)<<12|(63&n)<<6|63&i);else{if(240!==(248&r))throw RangeError("Illegal starting byte: "+r);(null===(n=e())||null===(i=e())||null===(a=e()))&&s([r,n,i,a]),t((7&r)<<18|(63&n)<<12|(63&i)<<6|63&a)}},e.UTF16toUTF8=function(e,t){for(var r,n=null;;){if(null===(r=null!==n?n:e()))break;r>=55296&&r<=57343&&null!==(n=e())&&n>=56320&&n<=57343?(t(1024*(r-55296)+n-56320+65536),n=null):t(r)}null!==n&&t(n)},e.UTF8toUTF16=function(e,t){var r=null;for("number"==typeof e&&(r=e,e=function(){return null});null!==r||null!==(r=e());)r<=65535?t(r):(r-=65536,t((r>>10)+55296),t(r%1024+56320)),r=null},e.encodeUTF16toUTF8=function(t,r){e.UTF16toUTF8(t,function(t){e.encodeUTF8(t,r)})},e.decodeUTF8toUTF16=function(t,r){e.decodeUTF8(t,function(t){e.UTF8toUTF16(t,r)})},e.calculateCodePoint=function(e){return e<128?1:e<2048?2:e<65536?3:4},e.calculateUTF8=function(e){for(var t,r=0;null!==(t=e());)r+=t<128?1:t<2048?2:t<65536?3:4;return r},e.calculateUTF16asUTF8=function(t){var r=0,n=0;return e.UTF16toUTF8(t,function(e){++r,n+=e<128?1:e<2048?2:e<65536?3:4}),[r,n]},e}();ByteBufferPrototype.toUTF8=function(e,t){if("undefined"==typeof e&&(e=this.offset),"undefined"==typeof t&&(t=this.limit),!this.noAssert){if("number"!=typeof e||e%1!==0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof t||t%1!==0)throw TypeError("Illegal end: Not an integer");if(t>>>=0,e<0||e>t||t>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+t+" <= "+this.buffer.byteLength)}var r;try{utfx.decodeUTF8toUTF16(function(){return e<t?this.view[e++]:null}.bind(this),r=stringDestination())}catch(r){if(e!==t)throw RangeError("Illegal range: Truncated data, "+e+" != "+t)}return r()},ByteBuffer.fromUTF8=function(e,t,r){if(!r&&"string"!=typeof e)throw TypeError("Illegal str: Not a string");var n=new ByteBuffer(utfx.calculateUTF16asUTF8(stringSource(e),!0)[1],t,r),i=0;return utfx.encodeUTF16toUTF8(stringSource(e),function(e){n.view[i++]=e}),n.limit=i,n};var IsNull=IsNull||function(e){return null==e||void 0==e},td_proto_config=td_proto_config||{},TYPE_STEP=20,TYPE_NIL=0,TYPE_U8=1,TYPE_I8=2,TYPE_U16=3,TYPE_I16=4,TYPE_U32=5,TYPE_I32=6,TYPE_FLOAT=7,TYPE_STR=8,TYPE_RAW=9,TYPE_MAP=10,TYPE_AU8=21,TYPE_AI8=22,TYPE_AU16=23,TYPE_AI16=24,TYPE_AU32=25,TYPE_AI32=26,TYPE_AFLOAT=27,TYPE_ASTR=28,TYPE_ARAW=29,TYPE_AMAP=30,STR_TYPE_NIL="nil",STR_TYPE_U8="u8",STR_TYPE_I8="i8",STR_TYPE_U16="u16",STR_TYPE_I16="i16",STR_TYPE_U32="u32",STR_TYPE_I32="i32",STR_TYPE_FLOAT="float",STR_TYPE_STR="str",STR_TYPE_RAW="raw",STR_TYPE_MAP="map",STR_TYPE_AU8="u8[]",STR_TYPE_AI8="i8[]",STR_TYPE_AU16="u16[]",STR_TYPE_AI16="i16[]",STR_TYPE_AU32="u32[]",STR_TYPE_AI32="i32[]",STR_TYPE_AFLOAT="float[]",STR_TYPE_ASTR="str[]",STR_TYPE_ARAW="raw[]",STR_TYPE_AMAP="map[]";td_reinit_proto('{    "types" : [        "none", "u8",   "i8",   "u16",   "i16",   "u32",   "i32",   "float",   "str",   "raw",   "map",                "u8[]", "i8[]", "u16[]", "i16[]", "u32[]", "i32[]", "float[]", "str[]", "raw[]", "map[]"    ],    "field" : {        "timestamp"                    : { "index" :    1,     "pattern" : "u32" },        "account"                      : { "index" :    2,     "pattern" : "str" },        "server_id"                    : { "index" :    3,     "pattern" : "u32" },        "device_id"                    : { "index" :    4,     "pattern" : "str" },        "auth_str"                     : { "index" :    5,     "pattern" : "str" },        "version"                      : { "index" :    6,     "pattern" : "u32" },        "err_msg"                      : { "index" :    7,     "pattern" : "str" },        "ret"                          : { "index" :    8,     "pattern" : "i32" },        "password"                     : { "index" :    9,     "pattern" : "str" },        "rid"                          : { "index" :    10,    "pattern" : "str" },        "is_freezed"                   : { "index" :    11,    "pattern" : "u8"  },        "name"                         : { "index" :    12,    "pattern" : "str" },        "account"                      : { "index" :    13,    "pattern" : "str" },        "client_ip"                    : { "index" :    14,    "pattern" : "str" },        "create_time"                  : { "index" :    15,    "pattern" : "u32" },        "stone"                        : { "index" :    16,    "pattern" : "i32" },        "gold"                         : { "index" :    17,    "pattern" : "i32" },        "exp"                          : { "index" :    18,    "pattern" : "u32" },        "lv"                           : { "index" :    19,    "pattern" : "u32" },        "last_logout_time"             : { "index" :    20,    "pattern" : "u32" },        "last_login_time"              : { "index" :    21,    "pattern" : "u32" },        "all_login_time"               : { "index" :    22,    "pattern" : "u32" },        "ban_flag"                     : { "index" :    23,    "pattern" : "u32" },        "ban_end_time"                 : { "index" :    24,    "pattern" : "u32" },        "vip"                          : { "index" :    25,    "pattern" : "u32" },        "vip_exp"                      : { "index" :    26,    "pattern" : "u32" },        "sp"                           : { "index" :    27,    "pattern" : "u32" },        "account_rid"                  : { "index" :    28,    "pattern" : "str" },        "oper"                         : { "index" :    29,    "pattern" : "str" },        "field"                        : { "index" :    30,    "pattern" : "str" },        "class_id"                     : { "index" :    31,    "pattern" : "u32" },        "amount"                       : { "index" :    32,    "pattern" : "i32" },        "properties"                   : { "index" :    33,    "pattern" : "map[]" },        "attribs"                      : { "index" :    34,    "pattern" : "map[]" },        "pos"                          : { "index" :    35,    "pattern" : "str" },        "ob_type"                      : { "index" :    36,    "pattern" : "i8" },        "owner"                        : { "index" :    37,    "pattern" : "str" },        "item_list"                    : { "index" :    38,    "pattern" : "map[]" },        "equip_list"                   : { "index" :    39,    "pattern" : "map[]" },        "user"                         : { "index" :    40,    "pattern" : "map" },        "send_time"                    : { "index" :    41,    "pattern" : "u32" },        "send_content"                 : { "index" :    42,    "pattern" : "str" },        "send_name"                    : { "index" :    43,    "pattern" : "str" },        "recv_rid"                     : { "index" :    44,    "pattern" : "str" },        "send_rid"                     : { "index" :    45,    "pattern" : "str" },        "chat_channel"                 : { "index" :    46,    "pattern" : "str" },        "chat_info"                    : { "index" :    47,    "pattern" : "map" },        "room_name"                    : { "index" :    48,    "pattern" : "str" },        "info"                         : { "index" :    49,    "pattern" : "map" },        "game_type"                    : { "index" :    50,    "pattern" : "str" },        "idx"                          : { "index" :    51,    "pattern" : "i32" },        "enter_method"                 : { "index" :    52,    "pattern" : "str" },        "is_ready"                     : { "index" :    53,    "pattern" : "u8" },        "wheel_idx"                    : { "index" :    54,    "pattern" : "u8" },        "poker_list"                   : { "index" :    55,    "pattern" : "u8[]" },        "is_choose"                    : { "index" :    56,    "pattern" : "u8" },        "lord_idx"                     : { "index" :    57,    "pattern" : "i8" },        "wheels"                       : { "index" :    58,    "pattern" : "map[]" },        "cur_step"                     : { "index" :    59,    "pattern" : "str" },        "cur_op_idx"                   : { "index" :    60,    "pattern" : "i8" },        "enter_desk_idx"               : { "index" :    61,    "pattern" : "i32" },        "is_play"                      : { "index" :    62,    "pattern" : "u8" },        "poker_num"                    : { "index" :    63,    "pattern" : "u8" },        "is_light"                     : { "index" :    64,    "pattern" : "u8" },        "down_poker"                   : { "index" :    65,    "pattern" : "u8[]" },        "ddz_info"                     : { "index" :    66,    "pattern" : "map" },        "pea_amount"                   : { "index" :    67,    "pattern" : "i32" },        "win_amount"                   : { "index" :    68,    "pattern" : "i32" },        "lose_amount"                  : { "index" :    69,    "pattern" : "i32" },        "escape_amount"                : { "index" :    70,    "pattern" : "i32" },        "score"                        : { "index" :    71,    "pattern" : "map" },        "give_times"                   : { "index" :    72,    "pattern" : "i32" },        "last_give_time"               : { "index" :    73,    "pattern" : "u32" },        "sex"                          : { "index" :    74,    "pattern" : "u8" },        "details"                      : { "index" :    75,    "pattern" : "map[]" },        "is_win"                       : { "index" :    76,    "pattern" : "u8" },        "is_escape"                    : { "index" :    77,    "pattern" : "u8" },        "multi_num"                    : { "index" :    78,    "pattern" : "u32" },        "pea_amount_list"              : { "index" :    79,    "pattern" : "u32[]" },        "is_websocket"                 : { "index" :    80,    "pattern" : "u8" },        "throw_detail"                 : { "index" :    81,    "pattern" : "str" },        "game_state"                   : { "index" :    82,    "pattern" : "str" },        "desk_idx"                     : { "index" :    83,    "pattern" : "i32" },        "is_create"                    : { "index" :    84,    "pattern" : "i32" },        "room_card"                    : { "index" :    85,    "pattern" : "i32" },        "desk_detail"                  : { "index" :    86,    "pattern" : "str" },        "desk_ext1"                    : { "index" :    87,    "pattern" : "str" },        "desk_ext2"                    : { "index" :    88,    "pattern" : "str" },        "account_uid"                  : { "index" :    89,    "pattern" : "str" },        "headimgurl"                   : { "index" :    90,    "pattern" : "str" },        "desk_own_rid"                 : { "index" :    91,    "pattern" : "str" },        "extend_uid"                   : { "index" :    92,    "pattern" : "str" },        "need_room_card"               : { "index" :    93,    "pattern" : "i32" },        "crazy_lv"                     : { "index" :    94,    "pattern" : "i32" },        "order"                        : { "index" :    95,    "pattern" : "str" },        "chargeNum"                    : { "index" :    96,    "pattern" : "i32" },        "chargeStatus"                 : { "index" :    97,    "pattern" : "str" },        "agent_uid"                    : { "index" :    98,    "pattern" : "str" },        "has_joker"                    : { "index" :    99,    "pattern" : "u8"  },        "area"                         : { "index" :   100,    "pattern" : "u8"  },        "desk_create_time"             : { "index" :   102,    "pattern" : "u32" },        "is_need_room_card"            : { "index" :   103,    "pattern" : "u8"  },        "desk_status"                  : { "index" :   104,    "pattern" : "str" },        "cur_score"                    : { "index" :   105,    "pattern" : "map" },        "idx1"                         : { "index" :   106,    "pattern" : "i32" },        "idx2"                         : { "index" :   107,    "pattern" : "i32" },        "idx3"                         : { "index" :   108,    "pattern" : "i32" },        "idx4"                         : { "index" :   109,    "pattern" : "i32" },\t\t"is_refuse_buy"                : { "index" :   110,    "pattern" : "i32" },\t\t"desk_dissolve_info"           : { "index" :   111,    "pattern" : "map[]" },        "rank1"                        : { "index" :   112,    "pattern" : "map" },        "rank2"                        : { "index" :   113,    "pattern" : "map" },        "rank3"                        : { "index" :   114,    "pattern" : "map" },        "spec1"                        : { "index" :   115,    "pattern" : "i32" },        "spec2"                        : { "index" :   116,    "pattern" : "i32" },        "spec3"                        : { "index" :   117,    "pattern" : "i32" },        "spec4"                        : { "index" :   118,    "pattern" : "i32" },        "allkill"                      : { "index" :   123,    "pattern" : "map" },        "spec_type"                    : { "index" :   124,    "pattern" : "u8" },        "first_type"                   : { "index" :   125,    "pattern" : "u8" },        "second_type"                  : { "index" :   126,    "pattern" : "u8" },        "third_type"                   : { "index" :   127,    "pattern" : "u8" },        "first_list"                   : { "index" :   128,    "pattern" : "u16[]" },        "second_list"                  : { "index" :   129,    "pattern" : "u16[]" },        "third_list"                   : { "index" :   130,    "pattern" : "u16[]" },        "users"                        : { "index" :   131,    "pattern" : "map[]" },        "is_show_card"                 : { "index" :   132,    "pattern" : "u8" },        "is_compare_end"               : { "index" :   133,    "pattern" : "u8" },        "cur_round"                    : { "index" :   134,    "pattern" : "u8" },\t\t"full_num"                     : { "index" :   135,    "pattern" : "u8"  },        "full_round"                   : { "index" :   136,    "pattern" : "u16" },        "cur_round_score"              : { "index" :   137,    "pattern" : "map" },        "last_save_time"               : { "index" :   138,    "pattern" : "u32" },        "desk_status_time"             : { "index" :   139,    "pattern" : "u32" },        "step_time"                    : { "index" :   140,    "pattern" : "u32" },        "poker"                        : { "index" :   141,    "pattern" : "map" },        "gank_info"                    : { "index" :   142,    "pattern" : "map" },\t\t"gank12"                       : { "index" :   143,    "pattern" : "i32" },        "gank21"                       : { "index" :   144,    "pattern" : "i32" },\t\t"gank13"                       : { "index" :   145,    "pattern" : "i32" },        "gank31"                       : { "index" :   146,    "pattern" : "i32" },\t\t"gank14"                       : { "index" :   147,    "pattern" : "i32" },        "gank41"                       : { "index" :   148,    "pattern" : "i32" },\t\t"gank23"                       : { "index" :   149,    "pattern" : "i32" },        "gank32"                       : { "index" :   150,    "pattern" : "i32" },\t\t"gank24"                       : { "index" :   151,    "pattern" : "i32" },        "gank42"                       : { "index" :   152,    "pattern" : "i32" },\t\t"gank34"                       : { "index" :   153,    "pattern" : "i32" },        "gank43"                       : { "index" :   154,    "pattern" : "i32" },        "all_poker_list"               : { "index" :   155,    "pattern" : "map[]" },        "card"                         : { "index" :   156,    "pattern" : "map" },        "media_id"                     : { "index" :   157,    "pattern" : "str" },        "platform"                     : { "index" :   158,    "pattern" : "str" },        "faceId"                       : { "index" :   159,    "pattern" : "i32" },        "txt"                          : { "index" :   160,    "pattern" : "str" },        "resign_days"                  : { "index" :   161,    "pattern" : "i32" },        "sign_days"                    : { "index" :   162,    "pattern" : "i32" },        "last_sign_time"               : { "index" :   163,    "pattern" : "u32" },        "game_share_times"             : { "index" :   164,    "pattern" : "u32" },        "today_share_times"            : { "index" :   165,    "pattern" : "u32" },        "last_share_time"              : { "index" :   166,    "pattern" : "u32" },        "today_play_rounds"            : { "index" :   167,    "pattern" : "u32" },        "last_play_time"               : { "index" :   168,    "pattern" : "u32" },        "task_id"                      : { "index" :   169,    "pattern" : "u32" },        "task_status"                  : { "index" :   170,    "pattern" : "u32" },        "task_status_time"             : { "index" :   171,    "pattern" : "u32" },        "share_type"                   : { "index" :   172,    "pattern" : "u32" },        "share_uid"                    : { "index" :   173,    "pattern" : "str" },        "daily_task_list"              : { "index" :   174,    "pattern" : "map[]" },        "time_map"                     : { "index" :   175,    "pattern" : "map" },        "spec_score1"                  : { "index" :   176,    "pattern" : "map" },        "spec_score2"                  : { "index" :   177,    "pattern" : "map" },        "spec_score3"                  : { "index" :   178,    "pattern" : "map" },        "spec_score4"                  : { "index" :   179,    "pattern" : "map" },        "cur_round_score"              : { "index" :   180,    "pattern" : "map" },        "cur_zhua_score"               : { "index" :   181,    "pattern" : "map" },        "cur_bomb_score"               : { "index" :   182,    "pattern" : "map" },        "win_score"                    : { "index" :   183,    "pattern" : "i16" },        "win_idx"                      : { "index" :   184,    "pattern" : "i8" },        "last_win_op_idx"              : { "index" :   185,    "pattern" : "i8" },        "play_poker_list"              : { "index" :   186,    "pattern" : "map[]" },        "real_idx_wheel_list"          : { "index" :   187,    "pattern" : "u8[]" },        "desk_score_type"              : { "index" :   188,    "pattern" : "i32" },        "is_playing"                   : { "index" :   189,    "pattern" : "u8" },        "choose_start_idx"             : { "index" :   190,    "pattern" : "i8" },        "call_score"                   : { "index" :   191,    "pattern" : "i16" },        "call_idx"                     : { "index" :   192,    "pattern" : "i8" },        "is_pass"                      : { "index" :   193,    "pattern" : "u8" },        "call_stack"                   : { "index" :   194,    "pattern" : "map[]" },        "master_idx"                   : { "index" :   195,    "pattern" : "i8" },        "master_color"                 : { "index" :   196,    "pattern" : "i8" },        "win_poker_list"               : { "index" :   197,    "pattern" : "u8[]" },        "catch_score_list"             : { "index" :   198,    "pattern" : "u8[]" },        "ext_top_list"                 : { "index" :   199,    "pattern" : "map" },        "down_score"                   : { "index" :   200,    "pattern" : "i16" },        "is_score_end"                 : { "index" :   201,    "pattern" : "u8" },        "left_time"                    : { "index" :   202,    "pattern" : "i32" },        "show_result_left_time"        : { "index" :   203,    "pattern" : "i32" },        "cur_round_bomb_score"         : { "index" :   204,    "pattern" : "map" },        "cur_round_bomb_zhua_score"    : { "index" :   205,    "pattern" : "map" },        "win_idx_list"                 : { "index" :   206,    "pattern" : "u8[]" },        "cur_round_zhua_score"         : { "index" :   207,    "pattern" : "map" },        "not_master_nums"              : { "index" :   208,    "pattern" : "u8" },        "not_master_list"              : { "index" :   209,    "pattern" : "map" },        "realname"                     : { "index" :   210,    "pattern" : "str" },        "telephone"                    : { "index" :   211,    "pattern" : "str" },        "wechat"                       : { "index" :   212,    "pattern" : "str" },        "share_status_list"            : { "index" :   213,    "pattern" : "str" },        "left_turn_times"              : { "index" :   214,    "pattern" : "i32" },        "double_count"                 : { "index" :   215,    "pattern" : "i32" },        "all_count"                    : { "index" :   216,    "pattern" : "i32" },        "master_idx1"                  : { "index" :   217,    "pattern" : "map" },        "master_idx2"                  : { "index" :   218,    "pattern" : "map" },        "master_idx3"                  : { "index" :   219,    "pattern" : "map" },        "native_game_type"             : { "index" :   220,    "pattern" : "str" },        "receive_native_rewards"       : { "index" :   221,    "pattern" : "str" },        "cur_base_score"               : { "index" :   222,    "pattern" : "map" },        "left_poker_list"              : { "index" :   223,    "pattern" : "map[]" },         "rand_num1"                    : { "index" :   224,    "pattern" : "i32" },        "rand_num2"                    : { "index" :   225,    "pattern" : "i32" },        "rand_pokers"                  : { "index" :   226,    "pattern" : "u8[]" },        "select_actions"               : { "index" :   227,    "pattern" : "u8[]" },        "last_dispatch_poker"          : { "index" :   229,    "pattern" : "u8" },        "out_pokers"                   : { "index" :   230,    "pattern" : "u8[]" },        "weave_pokers"                 : { "index" :   231,    "pattern" : "map[]" },         "mj_action"                    : { "index" :   232,    "pattern" : "u8" },        "wheel_rand_idx1"              : { "index" :   233,    "pattern" : "u8[]" },         "wheel_rand_idx2"              : { "index" :   234,    "pattern" : "u8[]" },         "wheel_rand_idx3"              : { "index" :   235,    "pattern" : "u8[]" },         "wheel_rand_idx4"              : { "index" :   236,    "pattern" : "u8[]" },         "last_out_poker"               : { "index" :   237,    "pattern" : "u8" },        "last_out_poker_idx"           : { "index" :   238,    "pattern" : "u8" },        "down_rand_pokers"             : { "index" :   239,    "pattern" : "u8[]" },          "ext_poker_list"               : { "index" :   240,    "pattern" : "u8[]" },        "user_location_info"           : { "index" :   241,    "pattern" : "map[]" },        "location"                     : { "index" :   242,    "pattern" : "str" },         "cur_hu_types"                 : { "index" :   243,    "pattern" : "u16[]" },        "king_score"                   : { "index" :   244,    "pattern" : "i16" },        "hu_score"                     : { "index" :   245,    "pattern" : "i16" },         "down_king_score"              : { "index" :   246,    "pattern" : "i8" },         "result_data"                  : { "index" :   247,    "pattern" : "map" },         "gang_score"                   : { "index" :   248,    "pattern" : "i8" },         "record_detail"                : { "index" :   249,    "pattern" : "str" },         "desk_type"                    : { "index" :   250,    "pattern" : "i8" },         "flower_list"                  : { "index" :   251,    "pattern" : "u8[]" },         "has_big_poker"                : { "index" :   252,    "pattern" : "u8" },         "discard_poker"                : { "index" :   253,    "pattern" : "i8" },         "chao_master"                  : { "index" :   254,    "pattern" : "i8" },         "gang_jing"                    : { "index" :   255,    "pattern" : "i8" },         "deal_kind_num"                : { "index" :   256,    "pattern" : "u8" },         "return_down_king_score"       : { "index" :   257,    "pattern" : "u8" },         "first_poker"                  : { "index" :   258,    "pattern" : "u8" },         "open_double_kind"             : { "index" :   259,    "pattern" : "u8" },         "cur_hu_list"                  : { "index" :   260,    "pattern" : "map[]" },         "flower_score"                 : { "index" :   261,    "pattern" : "u16" },         "pg_score"                     : { "index" :   262,    "pattern" : "u16" },         "kind_score"                   : { "index" :   263,    "pattern" : "u16" },        "all_score"                    : { "index" :   264,    "pattern" : "u16" },        "other_score"                  : { "index" :   265,    "pattern" : "map[]" },         "reason"                       : { "index" :   266,    "pattern" : "str" },        "turn_back"                    : { "index" :   267,    "pattern" : "i8" },          "last_master_times"            : { "index" :   268,    "pattern" : "i8" },        "single_hu_times"              : { "index" :   269,    "pattern" : "i8" },        "double_hu_times"              : { "index" :   270,    "pattern" : "i8" },        "three_hu_times"               : { "index" :   271,    "pattern" : "i8" },        "mj_hu_detail"                 : { "index" :   272,    "pattern" : "map" },        "need_money"                   : { "index" :   273,    "pattern" : "u16" },        "money_type"                   : { "index" :   274,    "pattern" : "str" },        "remain_poker_num"             : { "index" :   275,    "pattern" : "i8" },        "last_dispatch_idx"            : { "index" :   276,    "pattern" : "u8" },        "rid1"                         : { "index" :   277,    "pattern" : "str" },        "rid2"                         : { "index" :   278,    "pattern" : "str" },        "rid3"                         : { "index" :   279,    "pattern" : "str" },        "rid4"                         : { "index" :   280,    "pattern" : "str" },                "fish_id"                      : { "index" :   281,    "pattern" : "u16" },        "cost"                         : { "index" :   282,    "pattern" : "u32" },        "startx"                       : { "index" :   283,    "pattern" : "i16" },        "starty"                       : { "index" :   284,    "pattern" : "i16" },        "pointx1"                      : { "index" :   285,    "pattern" : "i16" },        "pointy1"                      : { "index" :   286,    "pattern" : "i16" },        "pointx2"                      : { "index" :   287,    "pattern" : "i16" },        "pointy2"                      : { "index" :   288,    "pattern" : "i16" },        "endx"                         : { "index" :   289,    "pattern" : "i16" },        "endy"                         : { "index" :   290,    "pattern" : "i16" },        "mstime"                       : { "index" :   291,    "pattern" : "u32" },        "ctimestamp"                   : { "index" :   292,    "pattern" : "u32" },        "cmstime"                      : { "index" :   293,    "pattern" : "u32" },        "extra_poker"                  : { "index" :   294,    "pattern" : "u8" },        "extra_data"                   : { "index" :   295,    "pattern" : "map" },        "width"                        : { "index" :   296,    "pattern" : "i16" },        "height"                       : { "index" :   297,    "pattern" : "i16" },        "blood"                        : { "index" :   298,    "pattern" : "u32" },        "ratio"                        : { "index" :   299,    "pattern" : "float" },        "fish_score"                   : { "index" :   300,    "pattern" : "i16" },        "start_ms"                     : { "index" :   301,    "pattern" : "u32" },        "step_ms"                      : { "index" :   302,    "pattern" : "u32" },        "angle"                        : { "index" :   303,    "pattern" : "i16" },        "own_idx"                      : { "index" :   304,    "pattern" : "i16" },        "speed"                        : { "index" :   305,    "pattern" : "i16" },        "bullet_score"                 : { "index" :   306,    "pattern" : "i16" },        "id"                           : { "index" :   307,    "pattern" : "u32" },        "fish_list"                    : { "index" :   308,    "pattern" : "map[]" },        "bullet_list"                  : { "index" :   309,    "pattern" : "map[]" },        "vec_x"                        : { "index" :   310,    "pattern" : "i16" },        "vec_y"                        : { "index" :   311,    "pattern" : "i16" },        "bullet_id"                    : { "index" :   312,    "pattern" : "u32" },        "fish_id_list"                 : { "index" :   313,    "pattern" : "u32[]" },        "bullet_id_list"               : { "index" :   314,    "pattern" : "u32[]" },        "lock_fish_id"                 : { "index" :   315,    "pattern" : "u32" },        "freeze_ms"                    : { "index" :   316,    "pattern" : "u32" },        "max_id"                       : { "index" :   317,    "pattern" : "u32" },        "score_list"                   : { "index" :   318,    "pattern" : "u16[]" },        "fish_spec_status"             : { "index" :   319,    "pattern" : "str" },        "fish_spec_time_ms"            : { "index" :   320,    "pattern" : "u32" },        "bullet_num"                   : { "index" :   321,    "pattern" : "i32" },        "single_time"                  : { "index" :   322,    "pattern" : "i16" },        "single_create_time"           : { "index" :   323,    "pattern" : "u32" },        "has_stage"                    : { "index" :   324,    "pattern" : "u8" },        "can_change_ratio"             : { "index" :   325,    "pattern" : "u8" },        "freeze_num"                   : { "index" :   326,    "pattern" : "u8" },        "lock_num"                     : { "index" :   327,    "pattern" : "u8" },        "score_num"                    : { "index" :   328,    "pattern" : "u32" },        "test_pokers"                  : { "index" :   329,    "pattern" : "str" },        "is_bullet_end"                : { "index" :   330,    "pattern" : "u8" },        "vaild_time"                   : { "index" :   331,    "pattern" : "u32" },        "min_money"                    : { "index" :   332,    "pattern" : "i32" },        "master_rid"                   : { "index" :   333,    "pattern" : "str" },        "notice"                       : { "index" :   334,    "pattern" : "str" },        "apply_notice"                 : { "index" :   335,    "pattern" : "str" },        "head_icon"                    : { "index" :   336,    "pattern" : "str" },        "status"                       : { "index" :   337,    "pattern" : "i32" },        "finish_time"                  : { "index" :   338,    "pattern" : "u32" },        "status_rid"                   : { "index" :   339,    "pattern" : "str" },        "union_rid"                    : { "index" :   340,    "pattern" : "str" },        "position"                     : { "index" :   341,    "pattern" : "u16" },        "money"                        : { "index" :   342,    "pattern" : "i32" },        "match_detail"                 : { "index" :   343,    "pattern" : "str" },        "match_rid"                    : { "index" :   344,    "pattern" : "str" },                "apply_method"                 : { "index" :   345,    "pattern" : "u8" },        "all_join"                     : { "index" :   346,    "pattern" : "u32" },        "union_union_data"             : { "index" :   347,    "pattern" : "map" },        "union_char_data"              : { "index" :   348,    "pattern" : "map" },        "object"                       : { "index" :   349,    "pattern" : "map" },        "union_list"                   : { "index" :   350,    "pattern" : "map[]" },        "is_cancel"                    : { "index" :   351,    "pattern" : "u8" },        "union_mem_num"                : { "index" :   352,    "pattern" : "u16" },        "union_online_num"             : { "index" :   353,    "pattern" : "u16" },        "fish_all_score"               : { "index" :   354,    "pattern" : "i32" },        "fish_type"                    : { "index" :   355,    "pattern" : "str" },        "start_num"                    : { "index" :   356,    "pattern" : "u16" },        "end_num"                      : { "index" :   357,    "pattern" : "u16" },        "user_rid"                     : { "index" :   358,    "pattern" : "str" },        "vaild_days"                   : { "index" :   359,    "pattern" : "u16" },        "log_detail"                   : { "index" :   360,    "pattern" : "str" },        "cur_value"                    : { "index" :   361,    "pattern" : "i32" },        "step_value"                   : { "index" :   362,    "pattern" : "i32" },        "oper_name"                    : { "index" :   363,    "pattern" : "str" },        "offset"                       : { "index" :   364,    "pattern" : "u32" },        "count"                        : { "index" :   365,    "pattern" : "u32" },        "oncestr"                      : { "index" :   366,    "pattern" : "str" },        "match_money"                  : { "index" :   367,    "pattern" : "i32" },        "cost_ratio"                   : { "index" :   368,    "pattern" : "u8" },        "bullet_type"                  : { "index" :   369,    "pattern" : "u8" },        "log_type"                     : { "index" :   370,    "pattern" : "str" },        "match_data"                   : { "index" :   371,    "pattern" : "map" },        "title"                        : { "index" :   372,    "pattern" : "str" },        "content"                      : { "index" :   373,    "pattern" : "str" },        "chat_type"                    : { "index" :   374,    "pattern" : "str" },        "has_more_color"               : { "index" :   375,    "pattern" : "u8" },        "all_score_map"                : { "index" :   376,    "pattern" : "map" },        "idx5"                         : { "index" :   377,    "pattern" : "i32" },        "idx6"                         : { "index" :   378,    "pattern" : "i32" },        "compare_score"                : { "index" :   379,    "pattern" : "u16" },        "is_do_select"                 : { "index" :   380,    "pattern" : "u8" },        "can_catch_master"             : { "index" :   381,    "pattern" : "u8" },        "add_score_times"              : { "index" :   382,    "pattern" : "u8" },        "limit_add_times"              : { "index" :   383,    "pattern" : "u8" },        "catch_master_score"           : { "index" :   384,    "pattern" : "u16" },        "is_do_catch_master"           : { "index" :   385,    "pattern" : "u8" },        "catch_master_idx"             : { "index" :   386,    "pattern" : "u8" },        "is_join"                      : { "index" :   387,    "pattern" : "u8" },        "brocast_uid"                  : { "index" :   388,    "pattern" : "str" },        "pk_info"                      : { "index" :   389,    "pattern" : "str" },                "sum_point"                    : { "index" :   390,    "pattern" : "u8" },        "play_type"                    : { "index" :   391,    "pattern" : "i8" },        "hit_fish_str"                 : { "index" :   392,    "pattern" : "str" },        "hit_fish_detail_list"         : { "index" :   393,    "pattern" : "str[]" },        "dui_kind_count"               : { "index" :   394,    "pattern" : "i8" },        "action_hu_types"              : { "index" :   395,    "pattern" : "u16[]" },        "all_flower_list"              : { "index" :   396,    "pattern" : "map[]" },        "cost_match_ratio"             : { "index" :   397,    "pattern" : "u8" },        "piao_ratio"                   : { "index" :   398,    "pattern" : "i16" },        "listen_poker_list"            : { "index" :   399,    "pattern" : "u8[]" },        "gang_ratio"                   : { "index" :   400,    "pattern" : "u8" },        "first_show_idx"               : { "index" :   401,    "pattern" : "i8" },        "is_full_channel"              : { "index" :   402,    "pattern" : "u8" },        "action_gang"                  : { "index" :   403,    "pattern" : "u8" },        "do_bonus_type"                : { "index" :   404,    "pattern" : "u8" },        "is_end_bonus"                 : { "index" :   405,    "pattern" : "u8" },        "score_max_ratio"              : { "index" :   406,    "pattern" : "u8" },        "is_enable_piao"               : { "index" :   407,    "pattern" : "u8" },        "sub_game_type"                : { "index" :   408,    "pattern" : "str" },        "is_light_multi"               : { "index" :   409,    "pattern" : "u8" },        "hu_type_str"                  : { "index" :   410,    "pattern" : "str" },        "down_poker_list"              : { "index" :   411,    "pattern" : "u8[]" },        "piao_score"                   : { "index" :   412,    "pattern" : "i16" },        "ma_poker"                     : { "index" :   413,    "pattern" : "u8" },        "idx5"                         : { "index" :   414,    "pattern" : "i32" },        "idx6"                         : { "index" :   415,    "pattern" : "i32" },        "idx7"                         : { "index" :   416,    "pattern" : "i32" },        "spec5"                        : { "index" :   417,    "pattern" : "i32" },        "spec6"                        : { "index" :   418,    "pattern" : "i32" },        "spec7"                        : { "index" :   419,    "pattern" : "i32" },        "gank15"                       : { "index" :   420,    "pattern" : "i32" },        "gank16"                       : { "index" :   421,    "pattern" : "i32" },        "gank17"                       : { "index" :   422,    "pattern" : "i32" },        "gank51"                       : { "index" :   423,    "pattern" : "i32" },        "gank61"                       : { "index" :   424,    "pattern" : "i32" },        "gank71"                       : { "index" :   425,    "pattern" : "i32" },        "gank25"                       : { "index" :   426,    "pattern" : "i32" },        "gank26"                       : { "index" :   427,    "pattern" : "i32" },        "gank27"                       : { "index" :   428,    "pattern" : "i32" },        "gank52"                       : { "index" :   429,    "pattern" : "i32" },        "gank62"                       : { "index" :   430,    "pattern" : "i32" },        "gank72"                       : { "index" :   431,    "pattern" : "i32" },        "gank35"                       : { "index" :   432,    "pattern" : "i32" },        "gank36"                       : { "index" :   433,    "pattern" : "i32" },        "gank37"                       : { "index" :   434,    "pattern" : "i32" },        "gank53"                       : { "index" :   435,    "pattern" : "i32" },        "gank63"                       : { "index" :   436,    "pattern" : "i32" },        "gank73"                       : { "index" :   437,    "pattern" : "i32" },        "gank45"                       : { "index" :   438,    "pattern" : "i32" },        "gank46"                       : { "index" :   439,    "pattern" : "i32" },        "gank47"                       : { "index" :   440,    "pattern" : "i32" },        "gank54"                       : { "index" :   441,    "pattern" : "i32" },        "gank64"                       : { "index" :   442,    "pattern" : "i32" },        "gank74"                       : { "index" :   443,    "pattern" : "i32" },        "gank56"                       : { "index" :   444,    "pattern" : "i32" },        "gank57"                       : { "index" :   445,    "pattern" : "i32" },        "gank67"                       : { "index" :   446,    "pattern" : "i32" },        "gank65"                       : { "index" :   447,    "pattern" : "i32" },        "gank75"                       : { "index" :   448,    "pattern" : "i32" },        "gank76"                       : { "index" :   449,    "pattern" : "i32" },        "spec_score5"                  : { "index" :   450,    "pattern" : "map" },        "spec_score6"                  : { "index" :   451,    "pattern" : "map" },        "spec_score7"                  : { "index" :   452,    "pattern" : "map" },        "select_ratio"                 : { "index" :   453,    "pattern" : "i16" },        "is_master_mode"               : { "index" :   454,    "pattern" : "u8" },        "is_win_cost_mode"             : { "index" :   455,    "pattern" : "u8" },        "detail_info"                  : { "index" :   456,    "pattern" : "str" },        "from_str"                     : { "index" :   457,    "pattern" : "str" },        "compare_list"                 : { "index" :   458,    "pattern" : "u8[]" },        "is_left_twelve_light"         : { "index" :   459,    "pattern" : "u8" },        "is_calc_peng"                 : { "index" :   460,    "pattern" : "u8" },        "kan_score"                    : { "index" :   461,    "pattern" : "i16" },        "is_zimo"                      : { "index" :   462,    "pattern" : "u8" },        "device_info"                  : { "index" :   463,    "pattern" : "str" },        "base_ratio"                   : { "index" :   464,    "pattern" : "u8" },        "is_half_light"                : { "index" :   465,    "pattern" : "u8" },        "is_up_floor"                  : { "index" :   466,    "pattern" : "u8" },        "is_mj_game_check"             : { "index" :   467,    "pattern" : "u8" },        "all_login_times"              : { "index" :   468,    "pattern" : "u32" },        "mj_count_map"                 : { "index" :   469,    "pattern" : "map" },        "zimo_count"                   : { "index" :   470,    "pattern" : "u8" },        "hu_count"                     : { "index" :   471,    "pattern" : "u8" },        "pao_count"                    : { "index" :   472,    "pattern" : "u8" },        "angang_count"                 : { "index" :   473,    "pattern" : "u8" },        "minggang_count"               : { "index" :   474,    "pattern" : "u8" },        "mj_count_list"                : { "index" :   475,    "pattern" : "map[]" },        "ma_poker_list"                : { "index" :   476,    "pattern" : "u8[]" },        "buy_ma_type"                  : { "index" :   477,    "pattern" : "u8" },        "bonus_score"                  : { "index" :   478,    "pattern" : "i16" },        "return_down_rand_pokers"      : { "index" :   479,    "pattern" : "u8[]" },        "first_game_type"              : { "index" :   480,    "pattern" : "str" },        "is_auto_deal"                 : { "index" :   481,    "pattern" : "u8" },        "check_maker_poker"            : { "index" :   482,    "pattern" : "u8" },        "auto_deal_time"               : { "index" :   483,    "pattern" : "u16" },        "is_check_allready"            : { "index" :   484,    "pattern" : "u8" },        "is_score_mode"                : { "index" :   485,    "pattern" : "u8" },        "mj_hu_ext_str"                : { "index" :   486,    "pattern" : "str" },        "is_spec_poker"                : { "index" :   487,    "pattern" : "u8" },                "i8"                           : { "index" :    50000, "pattern" : "i8" },        "u8"                           : { "index" :    50001, "pattern" : "u8" },        "u16"                          : { "index" :    50002, "pattern" : "u16" },        "i16"                          : { "index" :    50003, "pattern" : "i16" },        "u32"                          : { "index" :    50004, "pattern" : "u32" },        "i32"                          : { "index" :    50005, "pattern" : "i32" },        "float"                        : { "index" :    50006, "pattern" : "float" },        "str"                          : { "index" :    50007, "pattern" : "str" },        "raw"                          : { "index" :    50008, "pattern" : "raw" },        "map"                          : { "index" :    50009, "pattern" : "map" },                "i8_list"                      : { "index" :    50010, "pattern" : "i8[]" },        "u8_list"                      : { "index" :    50011, "pattern" : "u8[]" },        "u16_list"                     : { "index" :    50012, "pattern" : "u16[]" },        "i16_list"                     : { "index" :    50013, "pattern" : "i16[]" },        "u32_list"                     : { "index" :    50014, "pattern" : "u32[]" },        "i32_list"                     : { "index" :    50015, "pattern" : "i32[]" },        "float_list"                   : { "index" :    50016, "pattern" : "float[]" },        "str_list"                     : { "index" :    50017, "pattern" : "str[]" },        "raw_list"                     : { "index" :    50018, "pattern" : "raw[]" },        "map_list"                     : { "index" :    50019, "pattern" : "map[]" },        "sys_last_insert_id"           : { "index" :    60000, "pattern" : "u32" },        "cid"                          : { "index" :    60001, "pattern" : "i32" },        "type"                         : { "index" :    60002, "pattern" : "str" },        "notnull"                      : { "index" :    60003, "pattern" : "i32" },        "dflt_value"                   : { "index" :    60004, "pattern" : "str" },        "pk"                           : { "index" :    60005, "pattern" : "i32" },        "Field"                        : { "index" :    60006, "pattern" : "str" },        "Type"                         : { "index" :    60007, "pattern" : "str" },        "Null"                         : { "index" :    60008, "pattern" : "str" },        "Key"                          : { "index" :    60009, "pattern" : "str" },        "information_schema"           : { "index" :    60010, "pattern" : "i32" },        "COLUMN_TYPE"                  : { "index" :    60011, "pattern" : "str" },        "COLUMNS"                      : { "index" :    60012, "pattern" : "str" },        "TABLE_NAME"                   : { "index" :    60013, "pattern" : "str" },        "SCHEMA_NAME"                  : { "index" :    60014, "pattern" : "str" },        "COLUMN_NAME"                  : { "index" :    60015, "pattern" : "str" },        "IS_NULLABLE"                  : { "index" :    60016, "pattern" : "str" },        "COLUMN_KEY"                   : { "index" :    60017, "pattern" : "str" },        "COLUMN_DEFAULT"               : { "index" :    60018, "pattern" : "str" },        "EXTRA"                        : { "index" :    60019, "pattern" : "str" },        "NON_UNIQUE"                   : { "index" :    60020, "pattern" : "str" },        "INDEX_NAME"                   : { "index" :    60021, "pattern" : "str" },        "SEQ_IN_INDEX"                 : { "index" :    60022, "pattern" : "str" },        "COLUMN_NAME"                  : { "index" :    60023, "pattern" : "str" },        "tbl_name"                     : { "index" :    60024, "pattern" : "str" },        "rootpage"                     : { "index" :    60025, "pattern" : "i32" },        "sql"                          : { "index" :    60026, "pattern" : "str" }    },    "proto": {        "cmd_internal_auth"            : { "msg_type" :    "gate",   "args" : [ "i8", "str", "str" ] },        "cmd_login"                    : { "msg_type" :    "logic",  "args" : [ "map" ] },        "cmd_user_list"                : { "msg_type" :    "logic",  "args" : [ "map" ] },        "msg_user_list"                : { "msg_type" :    "client", "args" : [ "map[]" ] },        "cmd_create_user"              : { "msg_type" :    "logic",  "args" : [ "map" ] },        "msg_create_user"              : { "msg_type" :    "client", "args" : [ "map" ] },        "cmd_select_user"              : { "msg_type" :    "logic",  "args" : [ "str" ] },        "msg_enter_game"               : { "msg_type" :    "client", "args" : [ "map" ] },        "msg_login_notify_status"      : { "msg_type" :    "client", "args" : [ "map" ] },        "new_client_init"              : { "msg_type" :    "logic",  "args" : [ "u32", "map", "map" ] },        "lose_client"                  : { "msg_type" :    "server", "args" : [ "u16" ] },        "cmd_common_op"                : { "msg_type" :    "logic",  "args" : [ "map" ] },        "msg_common_op"                : { "msg_type" :    "client", "args" : [ "map" ] },        "msg_object_updated"           : { "msg_type" :    "client", "args" : [ "str", "map" ] },        "msg_property_loaded"          : { "msg_type" :    "client", "args" : [ "str", "map[]" ] },        "msg_bonus"                    : { "msg_type" :    "client", "args" : [ "map", "u8" ] },        "cmd_sale_object"              : { "msg_type" :    "logic",  "args" : [ "map" ] },        "msg_sale_object"              : { "msg_type" :    "client", "args" : [ "map" ] },        "msg_property_delete"          : { "msg_type" :    "client", "args" : [ "str[]" ] },        "cmd_chat"                     : { "msg_type" :    "logic",  "args" : [ "i8", "map" ] },        "msg_chat"                     : { "msg_type" :    "client", "args" : [ "i8", "map" ] },        "msg_wait_queue_number"        : { "msg_type" :    "client", "args" : [ "u32" ] },        "cmd_enter_room"               : { "msg_type" :    "logic",  "args" : [ "map" ] },        "msg_enter_room"               : { "msg_type" :    "client", "args" : [ "map" ] },        "cmd_leave_room"               : { "msg_type" :    "logic",  "args" : [ "map" ] },        "msg_leave_room"               : { "msg_type" :    "client", "args" : [ "map" ] },        "cmd_room_oper"                : { "msg_type" :    "logic",  "args" : [ "str", "map" ] },        "msg_room_oper"                : { "msg_type" :    "client", "args" : [ "str", "map" ] },        "private_room_message"         : { "msg_type" :    "logic",  "args" : [ "str", "map" ] },        "cmd_room_message"             : { "msg_type" :    "logic",  "args" : [ "str", "map" ] },        "msg_room_message"             : { "msg_type" :    "client", "args" : [ "str", "map" ] },        "private_union_message"        : { "msg_type" :    "logic",  "args" : [ "str", "map" ] },        "cmd_union_message"            : { "msg_type" :    "logic",  "args" : [ "str", "map" ] },        "msg_union_message"            : { "msg_type" :    "client", "args" : [ "str", "map" ] },        "cmd_union_oper"               : { "msg_type" :    "logic",  "args" : [ "str", "map" ] },        "msg_union_oper"               : { "msg_type" :    "client", "args" : [ "str", "map" ] },        "respone_room_message"         : { "msg_type" :    "logic",  "args" : [ "str", "map" ] },        "cmd_change_name"              : { "msg_type" :    "logic",  "args" : [ "map" ] },        "msg_change_name"              : { "msg_type" :    "client", "args" : [ "map" ] },        "cmd_create_desk"              : { "msg_type" :    "logic",  "args" : [ "map" ] },        "msg_create_desk"              : { "msg_type" :    "client", "args" : [ "map" ] },        "cmd_enter_desk"               : { "msg_type" :    "logic",  "args" : [ "map" ] },        "msg_enter_desk"               : { "msg_type" :    "client", "args" : [ "map" ] },        "cmd_bind_extend"              : { "msg_type" :    "logic",  "args" : [ "map" ] },        "msg_bind_extend"              : { "msg_type" :    "client", "args" : [ "map" ] },        "cmd_bind_brocast"             : { "msg_type" :    "logic",  "args" : [ "map" ] },        "msg_bind_brocast"             : { "msg_type" :    "client", "args" : [ "map" ] },        "cmd_share_game"               : { "msg_type" :    "logic",  "args" : [ "map" ] },        "msg_share_game"               : { "msg_type" :    "client", "args" : [ "map" ] },        "cmd_daily_task"               : { "msg_type" :    "logic",  "args" : [ "map" ] },        "msg_daily_task"               : { "msg_type" :    "client", "args" : [ "map" ] },        "cmd_check_heart"              : { "msg_type" :    "logic",  "args" : [ "map" ] },        "msg_check_heart"              : { "msg_type" :    "client", "args" : [ "map" ] },        "msg_notify_time"              : { "msg_type" :    "client", "args" : [ "map" ] },        "msg_close_reason"             : { "msg_type" :    "client", "args" : [ "map" ] },        "cmd_share_award"              : { "msg_type" :    "logic",  "args" : [ "map" ] },        "msg_share_award"              : { "msg_type" :    "client", "args" : [ "map" ] },            "msg_db_result"                : { "msg_type" :    "server", "args" : [ "map[]" ] }    }}');
var WebSocket=WebSocket||window.WebSocket||window.MozWebSocket,WsNetwork=function(){function e(){var e={socket:null,host:null,isInit:!1,callback:null,initNetwork:function(e,t){cc.log("Network initSocket..."),this.host=e||"ws://echo.websocket.org",this.callback=t,this.reconnect()},reconnect:function(){if(!this.isInit){this.socket=new WebSocket(this.host);var e=this;this.socket.onopen=function(t){e.isInit=!0,cc.eventManager.dispatchCustomEvent("WsNetworkOnOpen"),e.callback&&e.callback("onopen")},this.socket.onmessage=function(t){t.data;e.callback&&e.callback("onmessage",t)},this.socket.onerror=function(t){e.callback&&e.callback("onerror",t),e.isInit=!1},this.socket.onclose=function(t){cc.eventManager.dispatchCustomEvent("WsNetworkOnClose"),e.callback&&e.callback("onclose"),e.isInit=!1},this.socket.onopen=function(t){function r(){e.isInit&&!e.heartTime&&(e.heartTime=setTimeout(function(){e.heartTime=null,e.sendMessage(CMD_CHECK_HEART,{}),r()},6e4))}e._isActiveClose=!1,e.isInit=!0,cc.eventManager.dispatchCustomEvent("WsNetworkOnOpen"),e.callback&&e.callback("onopen"),r()}}},isConnect:function(){return this.isInit},send:function(e){this.isInit?this.socket&&this.socket.readyState==WebSocket.OPEN?this.socket.send(e):this.socket&&cc.log("Network WebSocket readState:"+this.socket.readyState):cc.log("Network is not inited...")},close:function(){this.socket&&(this.isHandlerClose=!0,cc.log("Network close..."),this.socket.close(),this.socket=null)},sendMessage:function(){for(var e=arguments[0],t=[],r=1;r<arguments.length;r++)t.push(arguments[r]);cc.log("sendData = ",t);var n=new ByteBuffer(64,!0),i=encode_proto(n,td_proto_config,e,t);if(!i)return void console.log("encode ",e," failed!!!!");var a=new ArrayBuffer(n.offset);new Uint8Array(a).set(new Uint8Array(n.buffer).subarray(0,n.offset),0),this.send(a)}};return e}var t=null;return{getInstance:function(){return null===t&&(t=e()),t}}}();LOGIN_D={},LOGIN_D.connecting_time=0,LOGIN_D.login_info={},LOGIN_D.reason="",LOGIN_D.error_time=0,LOGIN_D.connect_callback=function(e,t){if("onopen"==e)ModuleMgr.removeWaitMsg(),ModuleMgr.showWaitMsg("连接成功, 正在为您请求数据",0),WsNetwork.getInstance().sendMessage(CMD_INTERNAL_AUTH,2,"22222",""),WsNetwork.getInstance().sendMessage(CMD_LOGIN,LOGIN_D.login_info);else if("onclose"==e||"onerror"==e){ModuleMgr.removeWaitMsg();var r=(new Date).getTime();if(cc.log(r-LOGIN_D.error_time),r-LOGIN_D.error_time<500)return;if(LOGIN_D.error_time=r,WsNetwork.getInstance().isHandlerClose)WsNetwork.getInstance().isHandlerClose=!1,ModuleMgr.runScene("LoginScene");else{var n=function(){ModuleMgr.runScene("LoginScene")};WsNetwork.getInstance().isConnect()?(""!=LOGIN_D.reason?ModuleMgr.showConfirmTxtMsg(LOGIN_D.reason,n):(n(),ModuleMgr.showTipMsg("您的网络已断开,正在为您重新登录")),LOGIN_D.reason=""):ModuleMgr.showConfirmTxtMsg("未能连接到服务器, 请检查您的网络设置",n)}this.connecting_time=null}else if("onmessage"==e){var i=function(e){var t=new Uint8Array(e),r=ByteBuffer.wrap(t,!0),n=decode_proto(r,td_proto_config);console.log("read = ",n);var i=n.proto;WaitMgr.hideWait(i);var a=NetMsg[i];if(!a)return void console.log("未找到处理函数"+i);var s=NetMsg[i+"_err"];return n.list[0]instanceof Object&&n.list[0].ret&&n.list[0].ret<0?void(s?s.apply(null,n.list):ModuleMgr.showConfirmTxtMsg(n.list[0].err_msg)):void a.apply(null,n.list)};if(cc.sys.isNative)i(t.data);else{var a=new FileReader;a.readAsArrayBuffer(t.data),a.onload=function(e){i(a.result)}}}},LOGIN_D.login=function(e,t,r){if(!((new Date).getTime()-this.connecting_time<1e4||WsNetwork.getInstance().isConnect())){var n=DataMgr.accountCtrl.getCurServer();if(n&&n.url){var i=n.url,a=getQueryString("ip");LOGIN_PORT&&(i=i.replace("12345",LOGIN_PORT)),a&&(i="ws://"+a+":12345");var s="H5_";cc.sys.isNative&&(s="NA_"),s+=cc.sys.os==cc.sys.OS_ANDROID?"Android":cc.sys.os==cc.sys.OS_IOS?"Ios":"Other",getQueryString("test_account")&&(e=getQueryString("test_account")),getQueryString("test_timestamp")&&(DataMgr.accountCtrl.timestamp=getQueryString("test_timestamp")),getQueryString("test_password")&&(t=getQueryString("test_password")),cc.log("server.url "+i);var o={account:e||DataMgr.accountCtrl.apiUid,password:t||DataMgr.accountCtrl.apiSign,timestamp:DataMgr.accountCtrl.timestamp,game_type:GAME_TYPE,device_id:GenUuid(),server_id:1,version:1,device_info:s};cc.sys.isNative&&(o.native_game_type=GAME_TYPE),DataMgr.accountCtrl.nickname&&(o.name=toDecodeURIComponent(DataMgr.accountCtrl.nickname)),DataMgr.accountCtrl.telephone&&(o.telephone=DataMgr.accountCtrl.telephone),DataMgr.accountCtrl.wechat&&(o.wechat=toDecodeURIComponent(DataMgr.accountCtrl.telephone)),DataMgr.accountCtrl.headimgurl&&(o.headimgurl=DataMgr.accountCtrl.headimgurl),LOGIN_D.login_info=o,ModuleMgr.showWaitMsg("正在为您连接服务器",0),WsNetwork.getInstance().initNetwork(i,function(e,t){LOGIN_D.connect_callback(e,t)})}}},ME_D={},ME_D.me_rid=null,ME_D.rid_list={},ME_D.user={},ME_D.me_updated=function(e){var t=(RemoveGet(e,"item_list")||[],RemoveGet(e,"equip_list")||[],RemoveGet(e,"hero_list")||[],e.user);ME_D.user=t;var r=getQueryString("brocast_uid")||"";r&&!ME_D.get_user().brocast_uid&&ME_D.send_message(CMD_BIND_BROCAST,{brocast_uid:r});var n=getQueryString("extend_uid")||"";n&&!ME_D.get_user().extend_uid&&ME_D.send_message(CMD_BIND_EXTEND,{extend_uid:n}),cc.eventManager.dispatchCustomEvent(EVENT_ENTER_GAME,e)},ME_D.get_user=function(){return ME_D.user},ME_D.get_rid=function(){return ME_D.user?ME_D.user.rid:null},ME_D.send_message=function(){var e=WsNetwork.getInstance().sendMessage;e.apply(WsNetwork.getInstance(),arguments)},ME_D.send_message_waiting=function(){var e=arguments[0];"string"==typeof e&&(e="msg"+e.substr(3),WaitMgr.showWait(e));var t=WsNetwork.getInstance().sendMessage;t.apply(WsNetwork.getInstance(),arguments)};