{"version":3,"sources":["NetworkError.js"],"names":["manager","require","KQNativeInvoke","cc","Class","extends","Component","properties","onLoad","exitAction","director","end","isNativeIOS","jsb","reflection","callStaticMethod","IOSClassName","ANDRIODClassName"],"mappings":";;;;;;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAMC,iBAAiBD,QAAQ,gBAAR,CAAvB;;AAEAE,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVQ,KAHP;;AAgBL;AACAC,YAAQ,kBAAY,CAEnB,CAnBI;;AAqBLC,gBAAW,sBAAW;AAClBN,WAAGO,QAAH,CAAYC,GAAZ;AACA,YAAIT,eAAeU,WAAf,EAAJ,EAAkC;AAC9BC,gBAAIC,UAAJ,CAAeC,gBAAf,CAAgCb,eAAec,YAA/C,EAA4D,SAA5D;AACH,SAFD,MAGK;AAAC;AACFH,gBAAIC,UAAJ,CAAeC,gBAAf,CAAgCb,eAAee,gBAA/C,EAAiE,SAAjE,EAA4E,KAA5E;AACH;AACJ;;AAED;AACA;;AAEA;AAlCK,CAAT","file":"NetworkError.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["var manager = require('manager');\nconst KQNativeInvoke = require('KQNativeInvoke');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n\n    exitAction:function() {\n        cc.director.end();\n        if (KQNativeInvoke.isNativeIOS()) {\n            jsb.reflection.callStaticMethod(KQNativeInvoke.IOSClassName,\"exitApp\");\n        }\n        else {//Android\n            jsb.reflection.callStaticMethod(KQNativeInvoke.ANDRIODClassName, \"exitApp\", \"()V\");\n        }\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n"]}