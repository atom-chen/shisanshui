{"version":3,"sources":["slider.js"],"names":["cc","Class","extends","Component","properties","indicatorNode","Node","backgroundNode","selectedNode","value","onLoad","self","on","EventType","TOUCH_START","event","TOUCH_MOVE","pt","node","convertToNodeSpace","v2","getLocationX","getLocationY","updateSlider","TOUCH_END","TOUCH_CANCEL","maxWidth","width","setValue","x","onValueChange","log"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,uBAAcL,GAAGM,IADT;AAERC,wBAAeP,GAAGM,IAFV;AAGRE,sBAAaR,GAAGM,IAHR;;AAKRG,eAAM;AALE,KAHP;;AAWL;AACAC,YAAQ,kBAAY;AAChB,YAAIC,OAAO,IAAX;AACA,aAAKN,aAAL,CAAmBO,EAAnB,CAAsBZ,GAAGM,IAAH,CAAQO,SAAR,CAAkBC,WAAxC,EAAoD,UAASC,KAAT,EAAgB,CAEnE,CAFD;AAGA,aAAKV,aAAL,CAAmBO,EAAnB,CAAsBZ,GAAGM,IAAH,CAAQO,SAAR,CAAkBG,UAAxC,EAAmD,UAASD,KAAT,EAAgB;AAC/D,gBAAIE,KAAKN,KAAKO,IAAL,CAAUC,kBAAV,CAA6BnB,GAAGoB,EAAH,CAAML,MAAMM,YAAN,EAAN,EAA2BN,MAAMO,YAAN,EAA3B,CAA7B,CAAT;AACAX,iBAAKY,YAAL,CAAkBN,EAAlB;AACH,SAHD;AAIA,aAAKZ,aAAL,CAAmBO,EAAnB,CAAsBZ,GAAGM,IAAH,CAAQO,SAAR,CAAkBW,SAAxC,EAAkD,UAAST,KAAT,EAAgB;AAC9D,gBAAIE,KAAKN,KAAKO,IAAL,CAAUC,kBAAV,CAA6BnB,GAAGoB,EAAH,CAAML,MAAMM,YAAN,EAAN,EAA2BN,MAAMO,YAAN,EAA3B,CAA7B,CAAT;AACAX,iBAAKY,YAAL,CAAkBN,EAAlB;AACH,SAHD;AAIA,aAAKZ,aAAL,CAAmBO,EAAnB,CAAsBZ,GAAGM,IAAH,CAAQO,SAAR,CAAkBY,YAAxC,EAAqD,UAASV,KAAT,EAAgB;AACjE,gBAAIE,KAAKN,KAAKO,IAAL,CAAUC,kBAAV,CAA6BnB,GAAGoB,EAAH,CAAML,MAAMM,YAAN,EAAN,EAA2BN,MAAMO,YAAN,EAA3B,CAA7B,CAAT;AACAX,iBAAKY,YAAL,CAAkBN,EAAlB;AACH,SAHD;;AAKA;AACA,aAAKS,QAAL,GAAgB,KAAKR,IAAL,CAAUS,KAAV,GAAgB,EAAhC;AACA,aAAKC,QAAL,CAAc,KAAKnB,KAAnB;AACH,KAjCI;;AAmCLc,kBAAa,sBAASN,EAAT,EAAa;AACtB,YAAIY,IAAIZ,GAAGY,CAAX;AACA,YAAIA,IAAI,CAAR,EAAW;AACPA,gBAAI,CAAJ;AACH;;AAED,YAAIA,IAAI,KAAKH,QAAb,EAAuB;AACnBG,gBAAI,KAAKH,QAAT;AACH;AACD,aAAKE,QAAL,CAAcC,IAAE,KAAKH,QAArB;AACA,aAAKI,aAAL,CAAmB,KAAKrB,KAAxB;AACH,KA9CI;;AAgDL;AACAmB,cAAS,kBAASnB,KAAT,EAAgB;AACrB,aAAKA,KAAL,GAAaA,KAAb;AACA,YAAI,KAAKA,KAAL,GAAa,CAAjB,EAAoB;AAChB,iBAAKA,KAAL,GAAa,CAAb;AACH;AACD,YAAI,KAAKA,KAAL,GAAa,CAAjB,EAAoB;AAChB,iBAAKA,KAAL,GAAa,CAAb;AACH;AACD;AACA,aAAKiB,QAAL,GAAgB,KAAKR,IAAL,CAAUS,KAAV,GAAgB,EAAhC;AACA,aAAKtB,aAAL,CAAmBwB,CAAnB,GAAuB,KAAKpB,KAAL,GAAa,KAAKiB,QAAlB,GAA2B,EAAlD;AACA,aAAKlB,YAAL,CAAkBmB,KAAlB,GAA0B,KAAKlB,KAAL,GAAa,KAAKiB,QAAlB,GAA6B,KAAKrB,aAAL,CAAmBsB,KAAnB,GAAyB,CAAhF;AACH,KA7DI;;AA+DLG,mBAAc,uBAASrB,KAAT,EAAgB;AAC1BT,WAAG+B,GAAH,CAAOtB,KAAP;AACH;AAjEI,CAAT","file":"slider.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        indicatorNode:cc.Node,\n        backgroundNode:cc.Node,\n        selectedNode:cc.Node,\n\n        value:0,\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        var self = this;\n        this.indicatorNode.on(cc.Node.EventType.TOUCH_START,function(event) {\n\n        });\n        this.indicatorNode.on(cc.Node.EventType.TOUCH_MOVE,function(event) {\n            var pt = self.node.convertToNodeSpace(cc.v2(event.getLocationX(),event.getLocationY()));\n            self.updateSlider(pt);\n        });\n        this.indicatorNode.on(cc.Node.EventType.TOUCH_END,function(event) {\n            var pt = self.node.convertToNodeSpace(cc.v2(event.getLocationX(),event.getLocationY()));\n            self.updateSlider(pt);\n        });\n        this.indicatorNode.on(cc.Node.EventType.TOUCH_CANCEL,function(event) {\n            var pt = self.node.convertToNodeSpace(cc.v2(event.getLocationX(),event.getLocationY()));\n            self.updateSlider(pt);\n        });\n\n        //this.maxWidth = this.node.width - 40;\n        this.maxWidth = this.node.width-28;\n        this.setValue(this.value);\n    },\n\n    updateSlider:function(pt) {\n        var x = pt.x;\n        if (x < 0) {\n            x = 0;\n        }\n\n        if (x > this.maxWidth) {\n            x = this.maxWidth;\n        }\n        this.setValue(x/this.maxWidth);\n        this.onValueChange(this.value);\n    },\n\n    /*0 - 1*/\n    setValue:function(value) {\n        this.value = value;\n        if (this.value < 0) {\n            this.value = 0;\n        }\n        if (this.value > 1) {\n            this.value = 1;\n        }\n        //this.maxWidth = this.node.width - 38;\n        this.maxWidth = this.node.width-28;\n        this.indicatorNode.x = this.value * this.maxWidth+10;\n        this.selectedNode.width = this.value * this.maxWidth + this.indicatorNode.width/2;\n    },\n\n    onValueChange:function(value) {\n        cc.log(value);\n    },\n});\n"]}