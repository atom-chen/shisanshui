{"version":3,"sources":["socket.js"],"names":["manager","require","KQGlobalEvent","KQNativeInvoke","SocketConstant","MaxReconnectCheckInterval","Socket","cc","Class","extends","Component","properties","_lastReceiveMsgTime","_timeout","statics","instance","url","onLoad","name","game","addPersistRootNode","node","isPersistRootNode","log","_registerAppActiveChange","isCreating","createIndex","createSocket","schedule","checkConnection","recvTime","Date","now","_checkSocket","sendMessage","self","networkError","forceExitApp","emit","Event","SocketConnecting","ws","WebSocket","SocketConnectError","socketError","onopen","event","sys","SocketConnectSuccessed","connectionSuccess","sendReconnectInfo","onmessage","SocketReceiveMessage","data","receviceMessage","_dispatchResponse","_kq_onerror","message","error","close","onclose","connectionDisconnect","SocketDisconnect","reconnect","scheduleOnce","userInfo","userId","user_id","id","response","checkNetworkStart","checkNetworkEnd","responseString","JSON","parse","action","on","EVENT_HIDE","_appEnterBackground","EVENT_SHOW","_appBecomActive","_lastAppEnterBackgroundTime","undefined","sendAppPause","_cancelCheckSocket","_lastAppBecomActiveTime","sendAppActive","_checkSocketExecute","bind","enterbackgroudAction","resumeAction","_checkNetwork","_strongVerifyData","isObjectValid","readyState","OPEN","send","_convertParameterToString","obj","stringify","checkNetworkNow","shouldCheck","macro","REPEAT_FOREVER","unschedule","_isSocketTimeout","_lastReceiveMessageInterval","interval","LoginJoin","RecordId","OnceAgain","BeiLv","InviteCode","JoinDesk","CreateDesk","LeaveDesk","DissolveDesk","AnswerDissolve","GetDeskInfo","SendImage","SendText","SendEmoji","ChangeInfo","SendAudioMessage","GetRecord","GetItemRecord","PlayCard","TimeoutDissolve","Feedback","SharePng","EnterRandom","CancelRandom","ForceExitRandom","Ready","StartGame","GetHallInfo","GetUserInfo","CheckAction","Pause","Active","Qingli","ReceiveRequestDissolve","ReceiveRequestDissolveResult","ReceiveChatText","ReceiveChatEmoji","ReceiveDeskInfo","ReceiveGameOver","ReceiveFaPai","ReceiveSharePng","ReceiveOnlineStatus","ReceiveOnChangeInfo","ReceiveAudioMessage","ReceivePlayCard","ReceiveCreateDesk","ReceiveReady","ReceiveHallInfo","ReceiveGetUserInfo","ReceiveCheckAction","ReceiveForceExit","ReceiveDissolveDesk","ReceiveInterRandom","ReceivePause","ReceiveInviteCode","ReceiveLeaveDesk","ReceiveSelectBeiLv","ReceiveBeiLv","ReceiveQingLi","ReceiveRecordId","ReceiveLoginJoin","ReceiveOnceAgain","ReceiveNoUionid","sendCheckAction","sendDidReceiveGameOverAction","param","DidReceiveGameOverAction","sendCreateDesk","createDescInfo","assert","sendQingli","leaveId","sendLoginJoin","roomId","sendOnceAgain","again","sendJoinDesk","sendBeiLv","beilv","sendInviteCode","inviteCode","sendGetDesckInfo","sendText","text","sendEmoji","emoji","sendChangeInfo","Info","sendAudioMessage","length","sendImage","image","sendGetRecrod","sendGetRecrodFromId","recordId","sendDissolveDesk","sendGetItemRecord","parentId","sendLeaveDesk","sendAnswerDissolve","answer","sendForceExitRoom","sendPlayCard","cardInfo","sendTimeoutDissolve","sendFeedback","sendSharePng","sendEnterRandom","sendCancelRandom","sendReady","sendStartGame","sendGetHallInfo","sendGetUserInfo","openId","module","exports"],"mappings":"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","file":"socket.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["var manager = require('manager');\nconst KQGlobalEvent = require('KQGlobalEvent');\nconst KQNativeInvoke = require('KQNativeInvoke');\n\nlet SocketConstant = {\n  MaxReconnectCheckInterval: 5, // 重连检测时间片\n};\n\n/**\n * 这是对 WebSocket 的一个封装\n * \n * 里面包含自动重连的功能\n */\nlet Socket = cc.Class({\n  extends: cc.Component,\n\n  properties: {\n    _lastReceiveMsgTime: 0, // 最后一次收到消息时间(毫秒)\n    _timeout: 8, // 超时时长 （秒）\n  },\n\n  statics: {\n    instance: null,\n    // url:\"ws://182.18.26.13:5041\",\n    url:\"ws://123.56.20.164:5041\",\n    // url:\"ws://192.168.0.108:5041\",\n    //url:\"ws://183.3.205.149:5002\",\n  },\n\n  // use this for initialization\n  onLoad: function () {\n    Socket.instance = this;\n\n    this.name = \"socket\";\n\n    cc.game.addPersistRootNode(this.node);\n    if (cc.game.isPersistRootNode(this.node)) {\n      cc.log('添加全局节点 Socket 成功');\n    }\n\n    this._registerAppActiveChange();\n\n    this.isCreating = false;\n    this.createIndex = 0;\n    this.createSocket();\n\n    this.schedule(function () {\n      this.checkConnection();\n    }, 5);\n\n    this.recvTime = Date.now(); //接收到最新一条服务器的信息的时间\n    //cc.log(manager.version);\n\n    this._checkSocket();\n  },\n\n  checkConnection: function () {\n    //客户端定时给服务端发送点数据，防止连接由于长时间没有通讯而被某些节点的防火墙关闭导致连接断开的情况。\n    this.sendMessage('checkAction', '');\n  },\n\n  createSocket: function () {\n    var self = this;\n    this.createIndex++; //创建次数加1\n    if (this.createIndex > 5) {\n      this.networkError();\n      KQNativeInvoke.forceExitApp();\n      return;\n    }\n    this.isCreating = true;\n\n    KQGlobalEvent.emit(Socket.Event.SocketConnecting);\n    this.ws = new WebSocket(Socket.url);\n    if (this.ws === null) {\n      this.networkError();\n      KQGlobalEvent.emit(Socket.Event.SocketConnectError, {'data': 'Socket 创建失败'});\n      KQNativeInvoke.forceExitApp();\n      return;\n    }\n    this.socketError = false;\n\n    // socket 连接成功\n    this.ws.onopen = function (event) {\n      //cc.log(\"WebSocket 连接成功：\", event);\n      \n      self._lastReceiveMsgTime = cc.sys.now();\n      KQGlobalEvent.emit(Socket.Event.SocketConnectSuccessed, event);\n\n      self.isCreating = false;\n      self.socketError = false;\n      self.createIndex = 0;\n      self.connectionSuccess();\n      self.sendReconnectInfo();\n    };\n\n    // socket 接收到消息\n    this.ws.onmessage = function (event) {\n      self._lastReceiveMsgTime = cc.sys.now();\n      KQGlobalEvent.emit(Socket.Event.SocketReceiveMessage, event.data);\n\n      self.isCreating = false;\n      self.socketError = false;\n      self.receviceMessage(event.data);\n      self._dispatchResponse(event.data);\n      self.recvTime = Date.now(); //接收最新一条信息的时间\n\n      /**/\n    };\n\n    /**\n     * socket 发生错误\n     * \n     * socket 本身有 `onerror` 回调，但事实证明，其不靠谱，\n     * 有很大的机率有误报的行为，常常在没有错误时，会给错误回调。\n     * 且不能定制超时时长\n     * \n     * @param {String} message \n     */\n    this.ws._kq_onerror = function (message) {\n      cc.error(`WebSocket 连接错误：${message}`);\n\n      KQGlobalEvent.emit(Socket.Event.SocketConnectError, {data: message});\n      self.ws.close();\n      if (!self.ws) {\n        return;\n      }\n\n      // 虽然调用了 websocket 的 close 方法，但是\n      // 它并会立即调用 onclose 回调，而是在未来的某\n      // 一时间再回调 onclose；但这里明显可以直接回调了。\n      let ws = self.ws;\n\n      self.ws.onclose();\n      ws.onclose = function(){};\n    };\n\n    // socke 已关闭\n    this.ws.onclose = function (event) {\n      //cc.log('WebSocket 已关闭 close time=' + Date.now() + \" event: \" + event);\n\n\n      self.isCreating = false;\n      self.socketError = true;\n      self.ws = null;\n      self.connectionDisconnect();\n      KQGlobalEvent.emit(Socket.Event.SocketDisconnect, event);\n      //cc.log('socket close'+JSON.stringify(event));\n    };\n  },\n\n  reconnect: function () {\n    var self = this;\n    this.scheduleOnce(function () {\n      if (!self.isCreating && self.socketError) {\n        self.createSocket();\n      }\n    }, 2);\n  },\n\n  sendReconnectInfo: function () {\n    var self = this;\n    this.scheduleOnce(function () {\n      if (this.userInfo != null) {\n        var userId = self.userInfo.user_id || self.userInfo.id;\n        self.sendMessage('reconnect', {\n          'userId': userId\n        });\n      }\n    }, 1);\n  },\n\n  receviceMessage: function (response) {\n\n  },\n\n  connectionDisconnect: function () {\n\n  },\n\n  connectionSuccess: function () {\n\n  },\n\n  networkError: function () {\n\n  },\n\n  checkNetworkStart: function () {\n\n  },\n\n  checkNetworkEnd: function () {\n\n  },\n\n  _dispatchResponse: function (responseString) {\n    //cc.log(\"WebSocket 接收到服务器消息：\", responseString);\n    let response = JSON.parse(responseString);\n    let action = response[\"action\"];\n    if (action) {\n      KQGlobalEvent.emit(action, response);\n    }\n  },\n\n  // MARK: 前后台操作\n  _registerAppActiveChange: function () {\n    //cc.log(\"WebSocket 注册应用进入前、后台事件\");\n    cc.game.on(cc.game.EVENT_HIDE, this._appEnterBackground, this);\n    cc.game.on(cc.game.EVENT_SHOW, this._appBecomActive, this);\n  },\n\n  /**\n   * 进入后台\n   */\n  _appEnterBackground: function () {\n    let now = cc.sys.now();\n    if (now - this._lastAppEnterBackgroundTime < 100) {\n      return;\n    }\n    this._lastAppEnterBackgroundTime = now;\n    \n    //cc.log(\"WebSocket 检测到应用进入后台：\", new Date());\n    let id = this.userInfo ? this.userInfo.id : undefined;\n    Socket.sendAppPause(id);\n    this._cancelCheckSocket();\n  },\n\n  /**\n   * 进入前台 \n   */\n  _appBecomActive: function () {\n    let now = cc.sys.now();\n    if (now - this._lastAppBecomActiveTime < 100) {\n      return;\n    }\n    this._lastAppBecomActiveTime = now;\n\n    //cc.log(\"WebSocket 检测到应用进入前台：\", new Date());\n    let id = this.userInfo ? this.userInfo.id : undefined;\n    Socket.sendAppActive(id);\n    this._checkSocket();\n\n    this.scheduleOnce(function() {\n      this._checkSocketExecute();\n    }.bind(this), 1.5);\n  },\n\n  //进入后台操作\n  enterbackgroudAction: function () {\n    this._appEnterBackground();\n  },\n\n  //进入前台操作\n  resumeAction: function () {\n    //检查网络\n    this._checkNetwork();\n    this._appBecomActive();\n  },\n\n  sendMessage: function (action, data) {\n    data = this._strongVerifyData(data);\n\n    if (this.socketError) {\n      cc.error(\"socket 连接错误：\" + this.socketError);\n      this.reconnect();\n      return;\n    }\n    //cc.log('WebSocket 发送消息：' + action, data);\n    if (cc.sys.isObjectValid(this.ws)) {\n      if (this.ws.readyState === WebSocket.OPEN) {\n        this.ws.send(this._convertParameterToString(action, data));\n      }\n    } else {\n      this.connectionDisconnect();\n    }\n  },\n\n  _strongVerifyData: function(data = {}) {\n    if ((typeof data) == 'string') {\n      data = {\"string\": data};\n    }\n\n    if (data == null) {\n      data = {};\n    }\n\n    if (!data[\"userId\"]) {\n      if (this.userInfo && (typeof this.userInfo) == 'object' && this.userInfo.id) {\n        data[\"userId\"] = this.userInfo.id;\n      }\n\n    }\n    return data;\n  },\n\n  _convertParameterToString: function (action, data = {}) {\n    var obj = {};\n    obj.action = action;\n    obj.data = data;\n    \n    return JSON.stringify(obj);\n  },\n\n  // 检查网络\n  _checkNetwork: function () {\n    if (this.checkNetworkNow) {\n      this.checkNetworkNow();\n    }\n\n    this.shouldCheck = true;\n    if (!this.socketError) {\n      this.recvTime = 0;\n      this.sendMessage('checkAction', '');\n      this.scheduleOnce(function () {\n        this.checkNetworkEnd();\n        this.shouldCheck = false;\n        if (this.recvTime === 0) {\n          this.connectionDisconnect();\n        }\n      }, 2.5);\n    } else {\n      this.connectionDisconnect();\n    }\n  },\n\n  // MARK: socket 掉线尽早确认\n  _checkSocket: function () {\n    this.schedule(this._checkSocketExecute, SocketConstant.MaxReconnectCheckInterval, cc.macro.REPEAT_FOREVER);\n  },\n\n  _cancelCheckSocket: function () {\n    this.unschedule(this._checkSocketExecute);\n  },\n\n  _checkSocketExecute: function () {\n    if (this._isSocketTimeout() && this.ws) {\n      this.ws._kq_onerror('连接超时');\n      return;\n    }\n  },\n\n  // socket 是否已超时\n  _isSocketTimeout: function () {\n    return this._lastReceiveMessageInterval() >= this._timeout;\n  },\n\n  // 上一次收到消息到现在的时间间隔\n  _lastReceiveMessageInterval: function () {\n    let now = cc.sys.now();\n    let interval = (now - this._lastReceiveMsgTime) / 1000;\n    //cc.log(`WebSocket 现在距上一条收到消息的时间间隔是：${interval} 秒`);\n    return interval;\n  },\n\n});\n\n// MARK: Socket 事件定义\nSocket.Event = {\n  SocketConnecting: \"SocketConnecting\",             // Socket 正在连接\n  SocketConnectSuccessed: \"SocketConnectSuccessed\", // 连接成功\n  SocketDisconnect: \"SocketDisconnect\",         // Socket 断开连接\n  SocketConnectError: \"SocketConnectError\",     // Socket 连接错误\n  SocketReceiveMessage: \"SocketReceiveMessage\", // Socket 接收到消息\n\n  LoginJoin:\"loginJoin\",                // 客户端发送 从登陆界面获取房间号进入游戏\n  RecordId:\"recordId\",                  // 客户端发送  \n  OnceAgain:\"onceAgain\",                  // 客户端发送  \n  BeiLv: \"beiLv\",                       // 客户端发送  \n  InviteCode: \"inviteCode\",             // 客户端发送   邀请码\n  JoinDesk: \"joinDesk\",                 // 客户端发送\n  CreateDesk: \"createDesk\",             // 客户端发送\n  LeaveDesk: \"leaveDesk\",               // 离开桌子\n  DissolveDesk: \"dissolveDesk\",         // 解散桌子\n  AnswerDissolve: \"answerDissolve\",     // 回答请求退出命令\n  GetDeskInfo: \"getDeskInfo\",           // 客户端发送\n  SendImage: \"sendImage\",               // 客户端发送\n  SendText: \"sendText\",                 // 客户端发送\n  SendEmoji: \"sendEmoji\",               // 客户端发送\n  ChangeInfo:\"changeInfo\",              // 客户端发送\n  SendAudioMessage: \"sendAudioMessage\", // 客户端发送  发送语音消息\n  GetRecord: \"getRecord\",               // 获取战绩信息\n  GetItemRecord: \"getItemRecord\",       // 获取战绩信息\n  PlayCard: \"playCard\",                 // 客户端发送，用户打出牌\n  TimeoutDissolve: \"timeoutDissolve\",   // 请求退出超时时，需要发出的消息\n  Feedback: \"feedback\",         // 客户端发送  反馈信息\n  SharePng: \"sharePng\",         // 客户端发送  分享领取砖石\n  EnterRandom: \"interRandom\",   // 客户端发送  进入随机场\n  CancelRandom: \"cancelRandom\", // 客户端发送  取消进入随机场\n  ForceExitRandom: \"dissolve\",  // 客户端发送 强制退出随机场\n  Ready: \"ready\",               // 客户端发送 准备\n  StartGame: \"startGame\", // 客户端发送 开始游戏\n  GetHallInfo: \"getHallInfo\",   // 客户端发送 获取大厅信息\n  GetUserInfo: \"getUserInfo\",   // 客户端发送 获取用户信息\n  CheckAction: \"checkAction\",   // 客户端发送，用来检测与服务器的连通性\n  Pause: \"pause\",               // 客户端进入后台时要发送的消息\n  Active: \"active\",             // 客户端回到前台时要发送的消息\n  Qingli: \"qingli\",             // 客户端回到前台时要发送的消息\n\n  ReceiveRequestDissolve: \"requestDissolve\", // 请求解散桌子 服务器发送\n  ReceiveRequestDissolveResult: \"requestDissolveResult\", // 请求解散桌子结果\n  ReceiveChatText: \"sendText\",    // 服务器发送\n  ReceiveChatEmoji: \"sendEmoji\",  // 服务器发送\n  ReceiveDeskInfo: \"deskInfo\",    // 服务器发送\n  ReceiveGameOver: \"gameOver\",    // 服务器发送\n  ReceiveFaPai: \"fapai\",          // 服务器发送\n  ReceiveSharePng: \"sharePngs\",   // 服务器发送\n  ReceiveOnlineStatus: \"sendOnlineStatus\",  // 服务器发送\n  ReceiveOnChangeInfo: \"changeInfo\",        // 服务器发送\n  ReceiveAudioMessage: \"sendAudioMessage\",  // 服务器发送，接收到用户发送了语音消息\n  ReceivePlayCard: \"playCard\",              // 服务器发送，有用户已经准备好牌\n  ReceiveCreateDesk: \"createDesk\",          // 服务器发送，创建房间的回调\n  ReceiveReady: \"ready\",                    // 服务器发送，有用户点击了准备\n  ReceiveHallInfo: \"getHallInfo\",           // 服务器发送\n  ReceiveGetUserInfo: \"getUserInfo\",        // 服务器发送 获取用户信息\n  ReceiveCheckAction: \"checkAction\",        // 服务器发送  用来确认 Socket 还在连着\n  ReceiveForceExit: \"forceExit\",            // 服务器发送  用来使客户端强退\n  ReceiveDissolveDesk: \"dissolveDesk\",      // 服务器发送   当房主退出时，解散桌子\n  ReceiveInterRandom: \"interRandom\",        // 服务器发送   进入随机场的反馈\n  ReceivePause: \"pause\",                    // 服务器发送   当有用户设备进入后台时，会收到这条消息\n  ReceiveInviteCode: 'inviteCode',          // 服务器发送，收到邀请码的消息\n  ReceiveLeaveDesk: 'leaveDesk',            // 服务器发送，收到需要离开桌子的消息\n  ReceiveSelectBeiLv: 'selectBeiLv',        // 服务器发送，收到选择倍率的消息\n  ReceiveBeiLv:'beiLv',                     // 服务器发送，收到倍率的消息\n  ReceiveQingLi:'qingli',                   // 服务器发送，收到请离\n  ReceiveRecordId:'recordId',               // 服务器发送，收到战绩信息\n  ReceiveLoginJoin:'loginJoin',             // 服务器发送，收到从页面进入房间信息\n  ReceiveOnceAgain:'onceAgain',             // 服务器发送，收到再来一局信息\n  ReceiveNoUionid:'noUionid',             // 服务器发送，收到没有unionID信号\n};\n\n\n// MARK: Socket 提供的可发给服务器消息的方法\n\nSocket.sendCheckAction = function() {\n  this.instance.sendMessage(this.Event.CheckAction, null);\n};\n/**/\nSocket.sendDidReceiveGameOverAction = function (userId) {\n  const param = userId ? {\"userId\": userId} : null;\n  this.instance.sendMessage(Socket.Event.DidReceiveGameOverAction, param);\n};\n/**/\n\n\n/**\n * 当 APP 进入后台时要发送的消息\n */\nSocket.sendAppPause = function(userId) {\n  let param = userId ? {\"userId\": userId} : null;\n  this.instance.sendMessage(this.Event.Pause, param);\n};\n\n/**\n * 当 APP 进入前台时发送的消息\n */\nSocket.sendAppActive = function(userId) {\n  let param = userId ? {\"userId\": userId} : null;\n  this.instance.sendMessage(this.Event.Active, param);\n};\n\n// 开房\nSocket.sendCreateDesk = function (createDescInfo, userId) {\n  cc.assert(createDescInfo);\n  cc.assert(userId);\n\n  createDescInfo[\"userId\"] = userId;\n  this.instance.sendMessage(this.Event.CreateDesk, createDescInfo);\n};\n\nSocket.sendQingli = function(leaveId,userId){\n let param = {\n    \"leaveId\": leaveId,\n    \"userId\": userId,\n  };\n  this.instance.sendMessage(this.Event.Qingli, param);\n};\n// 从登陆页面加入房间\nSocket.sendLoginJoin = function (roomId, userId) {\n  let param = {\n    \"roomId\": roomId,\n    \"userId\": userId,\n  };\n  this.instance.sendMessage(this.Event.LoginJoin, param);\n};\n// 再来一局\nSocket.sendOnceAgain = function (again,userId) {\n  let param = {\n    \"userId\": userId,\n    \"again\":again,\n  };\n  this.instance.sendMessage(this.Event.OnceAgain, param);\n};\n// 加入房间\nSocket.sendJoinDesk = function (roomId, userId) {\n  cc.assert(roomId);\n  cc.assert(userId);\n\n  let param = {\n    \"roomId\": roomId,\n    \"userId\": userId,\n  };\n  this.instance.sendMessage(this.Event.JoinDesk, param);\n};\n// 向服务端发送我选择的倍率\nSocket.sendBeiLv = function(beilv,userId){\n  let param = {\n    \"beilv\": beilv,\n    \"userId\": userId,\n  };\n  this.instance.sendMessage(this.Event.BeiLv, param);\n};\n// 发送邀请码\nSocket.sendInviteCode = function(inviteCode,userId){\n  let param = {\n    \"inviteCode\": inviteCode,\n    \"userId\": userId,\n  };\n  this.instance.sendMessage(this.Event.InviteCode, param);\n};\n\n// 获取房间信息\nSocket.sendGetDesckInfo = function (userId) {\n  cc.assert(userId);\n  let param = {\n    \"userId\": userId,\n  };\n\n  this.instance.sendMessage(this.Event.GetDeskInfo, param);\n};\n\nSocket.sendText = function (userId, text) {\n  //cc.assert(userId);\n  //cc.assert(text);\n  let param = {\n    \"msg\": text,\n    \"userId\": userId,\n  };\n  this.instance.sendMessage(this.Event.SendText, param);\n};\nSocket.sendEmoji = function(userId,emoji){\n  let param = {\n    \"emoji\": emoji,\n    \"userId\": userId,\n  };\n  this.instance.sendMessage(this.Event.SendEmoji, param);\n};\nSocket.sendChangeInfo = function(userId,Info){\n  let param = {\n    \"changeInfo\": Info,\n    \"userId\": userId,\n  };\n  this.instance.sendMessage(this.Event.ChangeInfo, param);\n};\nSocket.sendAudioMessage = function (userId, url = \"\") {\n  cc.assert(userId);\n  cc.assert(url.length > 0);\n\n  if (url.length == 0) {\n    return;\n  }\n\n  let param = {\n    \"url\": url,\n    \"userId\": userId,\n  };\n  this.instance.sendMessage(this.Event.SendAudioMessage, param);\n};\n\nSocket.sendImage = function (userId, image) {\n  cc.assert(userId);\n  cc.assert(image);\n  let param = {\n    \"msg\": image,\n    \"userId\": userId,\n  };\n  this.instance.sendMessage(this.Event.SendImage, param);\n};\n\nSocket.sendGetRecrod = function (userId) {\n  cc.assert(userId);\n  let param = {\n    \"userId\": userId,\n  };\n  this.instance.sendMessage(this.Event.GetRecord, param);\n};\n\nSocket.sendGetRecrodFromId = function(recordId){\n  let param = {\n    \"recordId\":recordId,\n  };\n  this.instance.sendMessage(this.Event.RecordId,param);\n};\n\nSocket.sendDissolveDesk = function (userId) {\n  cc.assert(userId);\n  let param = {\n    \"userId\": userId,\n  };\n  this.instance.sendMessage(this.Event.DissolveDesk, param);\n};\n\nSocket.sendGetItemRecord = function (userId, parentId) {\n  cc.assert(userId);\n  cc.assert(parentId);\n  let param = {\n    \"userId\": userId,\n    \"parentId\": parentId,\n  };\n\n  this.instance.sendMessage(this.Event.GetItemRecord, param);\n};\n\nSocket.sendLeaveDesk = function (userId) {\n    cc.assert(userId);\n    let param = {\n      \"userId\": userId,\n    };\n\n    this.instance.sendMessage(this.Event.LeaveDesk, param);\n},\n\n/**\n * 回答退房请求\n * \n * @param  {Number} userId 当前用户 id\n * @param  {NUmber} answer=1 回答。1 表示同意； 0 表示拒绝； -1 表示未选择\n */\nSocket.sendAnswerDissolve = function (userId, answer = 0) {\n  cc.assert(userId);\n  let param = {\n    \"userId\": userId,\n    \"answer\": answer\n  };\n\n  this.instance.sendMessage(this.Event.AnswerDissolve, param);\n},\n\n  Socket.sendForceExitRoom = function (userId) {\n    cc.assert(userId);\n    let param = {\n      \"userId\": userId,\n    };\n\n    this.instance.sendMessage(this.Event.DissolveDesk, param);\n  },\n\n  // 十三张中\n  // cardInfo 类似于：\n  // [{\n  //         'cards':[{'suit':suit,'number':number},{}],//特殊牌不用传\n  //         'type':0,\n  //         'value':4,\n  //         'isContainExtra':true,// 特殊牌是否包含特殊牌\n  //     },\n  //     {\n  //         'cards':[{'suit':suit,'number':number},{}],\n  //         'type':0,\n  //         'value':4\n  //     }]\nSocket.sendPlayCard = function (userId, cardInfo) {\n    cc.assert(userId);\n    let param = {\n      \"userId\": userId,\n      \"card\": cardInfo\n    };\n\n    this.instance.sendMessage(this.Event.PlayCard, param);\n};\n\nSocket.sendTimeoutDissolve = function (userId) {\n  cc.assert(userId);\n  let param = {\n    \"userId\": userId,\n  };\n\n  this.instance.sendMessage(this.Event.TimeoutDissolve, param);\n};\n\nSocket.sendFeedback = function (userId, text) {\n  cc.assert(userId);\n  cc.assert(text);\n  let param = {\n    \"userId\": userId,\n    \"text\": text\n  };\n\n  this.instance.sendMessage(this.Event.Feedback, param);\n}\n\nSocket.sendSharePng = function (userId) {\n  cc.assert(userId);\n  let param = {\n    \"userId\": userId,\n  };\n  this.instance.sendMessage(this.Event.SharePng, param);\n};\n// 开始匹配随机场\nSocket.sendEnterRandom = function (userId) {\n  cc.assert(userId);\n  let param = {\n    \"userId\": userId,\n  };\n\n  this.instance.sendMessage(this.Event.EnterRandom, param);\n};\n\n// 取消匹配随机场\nSocket.sendCancelRandom = function (userId) {\n  cc.assert(userId);\n  let param = {\n    \"userId\": userId,\n  };\n\n  this.instance.sendMessage(this.Event.CancelRandom, param);\n};\n\n// 准备\nSocket.sendReady = function (userId) {\n    cc.assert(userId);\n    let param = {\n      \"userId\": userId,\n    };\n\n    this.instance.sendMessage(this.Event.Ready, param);\n  },\n    Socket.sendStartGame = function (userId) {\n      cc.assert(userId);\n      let param = {\n        \"userId\": userId,\n      };\n      cc.log(this.Event.StartGame)\n      cc.log()\n      this.instance.sendMessage(this.Event.StartGame, param);\n    },\n\n// 获取大厅信息\nSocket.sendGetHallInfo = function (userId) {\n    let param = {\n      \"userId\": userId,\n    };\n\n    this.instance.sendMessage(this.Event.GetHallInfo, param);\n},\n\n// 获取用户信息\nSocket.sendGetUserInfo = function (userId, openId) {\n    let param = {\n      \"userId\": userId,\n      \"openId\": openId,\n    };\n\n    this.instance.sendMessage(this.Event.GetUserInfo, param);\n},\n\nmodule.exports = Socket;"]}