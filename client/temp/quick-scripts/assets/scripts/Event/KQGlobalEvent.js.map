{"version":3,"sources":["KQGlobalEvent.js"],"names":["KQGlobalEvent","_handles","emit","eventName","data","returns","findEvenName","i","length","returnValue","push","on","callback","target","bind","_caller","off","offTarget","name","eventHandlers","indexs","filter","map","index","indexOffset","forEach","splice","module","exports"],"mappings":";;;;;;AAAA,IAAIA,gBAAgB;AAChBC,cAAU,EADM;AAEhB;AACAC,UAAM,cAAUC,SAAV,EAAgC;AAAA,YAAXC,IAAW,uEAAJ,EAAI;;AAClC,YAAI,OAAOA,IAAP,IAAe,QAAnB,EAA6B;AACzBA,mBAAO,EAAC,QAAQA,IAAT,EAAP;AACH;;AAED,YAAIC,UAAU,EAAd,CALkC,CAKjB;AACjBD,aAAKD,SAAL,GAAiBA,SAAjB,CANkC,CAMR;;AAE1B,aAAM,IAAIG,YAAV,IAA0B,KAAKL,QAA/B,EAAwC;AACpC,gBAAIK,gBAAgBH,SAApB,EAA+B;AAC3B,qBAAK,IAAII,IAAI,CAAb,EAAgBA,IAAI,KAAKN,QAAL,CAAcK,YAAd,EAA4BE,MAAhD,EAAwDD,GAAxD,EAA6D;AACzD,wBAAIE,cAAc,KAAKR,QAAL,CAAcK,YAAd,EAA4BC,CAA5B,EAA+BH,IAA/B,CAAlB;AACAC,4BAAQK,IAAR,CAAaD,WAAb;AACH;AACJ;AACJ;;AAED,eAAOJ,OAAP;AACH,KArBe;AAsBhB;AACAM,QAAI,YAAUR,SAAV,EAAqBS,QAArB,EAA+BC,MAA/B,EAAuC;AACvC;AACA,aAAKZ,QAAL,CAAcE,SAAd,IAA2B,KAAKF,QAAL,CAAcE,SAAd,KAA4B,EAAvD;;AAEA,aAAKF,QAAL,CAAcE,SAAd,EAAyBO,IAAzB,CAA8BE,SAASE,IAAT,CAAcD,MAAd,CAA9B;AACAD,iBAASG,OAAT,GAAmBF,MAAnB;AACH,KA7Be;;AA+BhB;AACAG,SAAK,aAAUb,SAAV,EAAqB;AACtB,aAAK,IAAII,IAAI,CAAb,EAAgBA,IAAI,KAAKN,QAAL,CAAcE,SAAd,EAAyBK,MAA7C,EAAqDD,GAArD,EAA0D;AACtD,iBAAKN,QAAL,CAAcE,SAAd,EAAyBI,CAAzB,IAA8B,IAA9B;AACH;AACJ,KApCe;;AAsChB;AACAU,eAAW,mBAAUJ,MAAV,EAAkB;AAC3B,aAAK,IAAIK,IAAT,IAAiB,KAAKjB,QAAtB,EAAgC;AAC9B,gBAAIkB,gBAAgB,KAAKlB,QAAL,CAAciB,IAAd,CAApB;AACA,gBAAIE,SAASD,cAAcE,MAAd,CAAqB,UAAUT,QAAV,EAAoB;AACpD,uBAAOA,SAASG,OAAT,GAAmBF,MAA1B;AACD,aAFY,EAEVS,GAFU,CAEN,UAAUV,QAAV,EAAoBW,KAApB,EAA2B;AAChC,uBAAOA,KAAP;AACD,aAJY,CAAb;;AAMA,gBAAIC,cAAc,CAAlB;AACAJ,mBAAOK,OAAP,CAAe,UAAUF,KAAV,EAAiB;AAC9BJ,8BAAcO,MAAd,CAAqBH,QAAQC,WAA7B,EAA0C,CAA1C;AACAA,8BAAcA,cAAc,CAA5B;AACD,aAHD;AAID;AACF;AAtDe,CAApB;;AAyDAG,OAAOC,OAAP,GAAiB5B,aAAjB","file":"KQGlobalEvent.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\Event","sourcesContent":["let KQGlobalEvent = {\n    _handles: {},\n    //发送事件\n    emit: function (eventName, data = {}) {\n        if (typeof data == 'string') {\n            data = {'data': data};\n        }\n\n        var returns = [] //返回值\n        data.eventName = eventName//保存一下事件名字\n\n        for ( var findEvenName in this._handles){\n            if (findEvenName == eventName) {\n                for (var i = 0; i < this._handles[findEvenName].length; i++) {\n                    var returnValue = this._handles[findEvenName][i](data)\n                    returns.push(returnValue)\n                }\n            }\n        }\n\n        return returns\n    },\n    //添加普通事件\n    on: function (eventName, callback, target) {\n        // console.log('收到事件', eventName);\n        this._handles[eventName] = this._handles[eventName] || []\n\n        this._handles[eventName].push(callback.bind(target))\n        callback._caller = target;\n    },\n\n    //通过事件名移除一个监听器\n    off: function (eventName) {\n        for (var i = 0; i < this._handles[eventName].length; i++) {\n            this._handles[eventName][i] = null\n        }\n    },\n\n    // 移动一个 target 上所有的监听\n    offTarget: function (target) {\n      for (var name in this._handles) {\n        var eventHandlers = this._handles[name];\n        var indexs = eventHandlers.filter(function (callback) {\n          return callback._caller = target;\n        }).map(function (callback, index) {\n          return index;\n        });\n\n        var indexOffset = 0;\n        indexs.forEach(function (index) {\n          eventHandlers.splice(index + indexOffset, 1);\n          indexOffset = indexOffset + 1;\n        });\n      }\n    },\n};\n\nmodule.exports = KQGlobalEvent;\n"]}