{"version":3,"sources":["randRoom.js"],"names":["Socket","require","KQGlobalEvent","cc","Class","extends","Component","properties","matchingLabel","Label","timeNode","Node","matchingNode","waitingPrefab","Prefab","alertPrefab","tishi","_userId","_response","onLoad","instance","userInfo","id","isRoomViewShow","on","Event","ReceiveDeskInfo","_socketReceiveDeskInfo","SocketDisconnect","_socketDisconnect","SocketConnectSuccessed","_socketConnected","ReceiveInterRandom","_socketReceiveInterRandom","response","result","director","loadScene","unschedule","_timeoutRandomAction","reason","data","showAlertMessage","_showMatching","_hideMatching","active","showNetworkMessage","hiddenNetworkMessage","onDestroy","offTarget","clickExit","clickStart","sendEnterRandom","scheduleOnce","clickCancel","sendCancelRandom","comp","getComponent","alert","string","num","schedule","rotation","dismissAction","msg","networkNode","removeSelfAction","removeSelf","runAction","instantiate","node","addChild","self","onDismissComplete","setMessage","error","alertMessageNode"],"mappings":";;;;;;AAAA,IAAMA,SAASC,QAAQ,QAAR,CAAf;AACA,IAAMC,gBAAgBD,QAAQ,eAAR,CAAtB;;AAEAE,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,uBAAcL,GAAGM,KADT;AAERC,kBAASP,GAAGQ,IAFJ;AAGRC,sBAAaT,GAAGQ,IAHR;AAIRE,uBAAeV,GAAGW,MAJV;AAKRC,qBAAaZ,GAAGW,MALR;;AAORE,eAAMb,GAAGQ,IAPD;;AASRM,iBAAS,IATD;AAURC,mBAAW;AAVH,KAHP;;AAgBL;AACAC,YAAQ,kBAAY;AAClB,aAAKF,OAAL,GAAejB,OAAOoB,QAAP,CAAgBC,QAAhB,CAAyBC,EAAxC;AACAnB,WAAGoB,cAAH,GAAoB,IAApB;AACArB,sBAAcsB,EAAd,CAAiBxB,OAAOyB,KAAP,CAAaC,eAA9B,EAA+C,KAAKC,sBAApD,EAA4E,IAA5E;AACAzB,sBAAcsB,EAAd,CAAiBxB,OAAOyB,KAAP,CAAaG,gBAA9B,EAAgD,KAAKC,iBAArD,EAAwE,IAAxE;AACA3B,sBAAcsB,EAAd,CAAiBxB,OAAOyB,KAAP,CAAaK,sBAA9B,EAAsD,KAAKC,gBAA3D,EAA6E,IAA7E;AACA7B,sBAAcsB,EAAd,CAAiBxB,OAAOyB,KAAP,CAAaO,kBAA9B,EAAkD,KAAKC,yBAAvD,EAAkF,IAAlF;AACD,KAxBI;;AA0BLN,4BAAwB,gCAAUO,QAAV,EAAoB;AAC1C,YAAI,CAACA,SAASC,MAAd,EAAsB;AACpB;AACD;;AAEDhC,WAAGiC,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACD,KAhCI;;AAkCLJ,+BAA2B,mCAASC,QAAT,EAAmB;AAC1C;AACA,aAAKhB,SAAL,GAAiBgB,QAAjB;AACA,aAAKI,UAAL,CAAgB,KAAKC,oBAArB;AACA;AACA,YAAIL,SAASC,MAAb,EAAqB;AACjB;AACH;;AAED,YAAIK,SAASN,SAASO,IAAT,CAAcD,MAAd,IAAwB,SAArC;AACA,aAAKE,gBAAL,CAAsBF,MAAtB;;AAEA,YAAIA,UAAU,UAAd,EAA0B;AACtB,iBAAKG,aAAL;AACH,SAFD,MAEO;AACH,iBAAKC,aAAL;AACH;AACJ,KAnDI;;AAqDLf,uBAAmB,6BAAW;AAC5B;AACA,aAAKjB,YAAL,CAAkBiC,MAAlB,GAA2B,KAA3B;AACA,aAAKC,kBAAL,CAAwB,iBAAxB;AACD,KAzDI;;AA2DLf,sBAAkB,4BAAW;AAC3B,aAAKgB,oBAAL;AACD,KA7DI;;AAgELC,eAAW,qBAAY;AACrB9C,sBAAc+C,SAAd,CAAwB,IAAxB;AACD,KAlEI;;AAoELC,eAAW,qBAAY;AACnB/C,WAAGiC,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACH,KAtEI;;AAwELc,gBAAY,sBAAY;AACtBnD,eAAOoD,eAAP,CAAuB,KAAKnC,OAA5B;AACA,aAAK0B,aAAL;;AAEA;AACA;AACA;;;AAGA;;AAEA,aAAKU,YAAL,CAAkB,KAAKd,oBAAvB,EAA6C,CAA7C;AACD,KApFI;AAqFL;AACA;;;;;;;AAOA;AACAe,iBAAY,uBAAY;AACtBtD,eAAOuD,gBAAP,CAAwB,KAAKtC,OAA7B;;AAEA,aAAK2B,aAAL;AACD,KAlGI;;AAoGLL,0BAAsB,gCAAW;AAC7B,aAAKK,aAAL;AACA,aAAKF,gBAAL,CAAsB,QAAtB;AACH,KAvGI;;AAyGLC,mBAAe,yBAAW;AACtB,YAAIa,OAAO,KAAK5C,YAAL,CAAkB6C,YAAlB,CAA+B,OAA/B,CAAX;AACAD,aAAKE,KAAL;AACA,aAAKlD,aAAL,CAAmBmD,MAAnB,GAA4B,cAA5B;AACA,YAAIC,MAAM,CAAV;AACA,aAAKC,QAAL,CAAc,YAAW;AACrBD,kBAAMA,MAAM,GAAZ;AACA,iBAAKlD,QAAL,CAAcoD,QAAd,GAAyBF,GAAzB;AACF,SAHF,EAGI,IAHJ;AAIH,KAlHI;;AAoHLhB,mBAAe,yBAAW;AACtB,YAAIY,OAAO,KAAK5C,YAAL,CAAkB6C,YAAlB,CAA+B,OAA/B,CAAX;AACAD,aAAKO,aAAL;AACH,KAvHI;;AAyHJjB,wBAAmB,4BAASkB,GAAT,EAAc;AAC9B,aAAK1B,UAAL,CAAgB,KAAKC,oBAArB;;AAEA,YAAI,KAAK0B,WAAL,IAAoB,IAAxB,EAA8B;AAC1B,gBAAIC,mBAAmB/D,GAAGgE,UAAH,EAAvB;AACA,iBAAKF,WAAL,CAAiBG,SAAjB,CAA2BF,gBAA3B;AACA,iBAAKD,WAAL,GAAmB,IAAnB;AACH;AACD,aAAKA,WAAL,GAAmB9D,GAAGkE,WAAH,CAAe,KAAKxD,aAApB,CAAnB;AACA,aAAKyD,IAAL,CAAUC,QAAV,CAAmB,KAAKN,WAAxB;AACA,YAAIT,OAAO,KAAKS,WAAL,CAAiBR,YAAjB,CAA8B,OAA9B,CAAX;AACA,YAAIe,OAAO,IAAX;AACAhB,aAAKiB,iBAAL,GAAyB,YAAW;AAChCD,iBAAKP,WAAL,GAAmB,IAAnB;AACH,SAFD;AAGAT,aAAKkB,UAAL,CAAgBV,GAAhB;AACAR,aAAKE,KAAL;AACH,KA1II;;AA4ILX,0BAAqB,gCAAW;AAC5B,YAAI,KAAKkB,WAAL,IAAoB,IAAxB,EAA8B;AAC1B,iBAAKA,WAAL,CAAiBR,YAAjB,CAA8B,OAA9B,EAAuCM,aAAvC;AACH;AACJ,KAhJI;;AAkJLrB,sBAAkB,0BAASsB,GAAT,EAAc;AAC5B,YAAI,CAACA,GAAL,EAAU;AACN7D,eAAGwE,KAAH,CAAS,WAAT;AACA;AACH;;AAED,YAAI,CAAC,KAAKC,gBAAV,EAA4B;AACxB,iBAAKA,gBAAL,GAAwBzE,GAAGkE,WAAH,CAAe,KAAKtD,WAApB,CAAxB;AACA,iBAAKuD,IAAL,CAAUC,QAAV,CAAmB,KAAKK,gBAAxB;AACH;;AAED,aAAKA,gBAAL,CAAsBnB,YAAtB,CAAmC,OAAnC,EAA4CiB,UAA5C,CAAuDV,GAAvD;AACA,aAAKY,gBAAL,CAAsBnB,YAAtB,CAAmC,OAAnC,EAA4CC,KAA5C;AACH;AA/JI,CAAT","file":"randRoom.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["const Socket = require('socket');\nconst KQGlobalEvent = require('KQGlobalEvent');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        matchingLabel:cc.Label,\n        timeNode:cc.Node,\n        matchingNode:cc.Node,\n        waitingPrefab: cc.Prefab,\n        alertPrefab: cc.Prefab,\n\n        tishi:cc.Node,\n\n        _userId: null,\n        _response: null,\n    },\n\n    // use this for initialization\n    onLoad: function () {\n      this._userId = Socket.instance.userInfo.id;\n      cc.isRoomViewShow = true;\n      KQGlobalEvent.on(Socket.Event.ReceiveDeskInfo, this._socketReceiveDeskInfo ,this);\n      KQGlobalEvent.on(Socket.Event.SocketDisconnect, this._socketDisconnect, this);\n      KQGlobalEvent.on(Socket.Event.SocketConnectSuccessed, this._socketConnected, this);\n      KQGlobalEvent.on(Socket.Event.ReceiveInterRandom, this._socketReceiveInterRandom, this);\n    },\n\n    _socketReceiveDeskInfo: function (response) {\n      if (!response.result) {\n        return;\n      }\n\n      cc.director.loadScene('play');\n    },\n\n    _socketReceiveInterRandom: function(response) {\n        //服务器发送  {'action':'interRandom','result':false,'data':{'reason':reason}}\n        this._response = response;\n        this.unschedule(this._timeoutRandomAction);\n        // 处理随机场匹配不成功的情况\n        if (response.result) {\n            return;\n        }\n\n        let reason = response.data.reason || \"加入随机场失败\";\n        this.showAlertMessage(reason);\n\n        if (reason == '你已经在匹配队列') {\n            this._showMatching();\n        } else {\n            this._hideMatching();\n        }\n    },\n\n    _socketDisconnect: function() {\n      // 连接已断开\n      this.matchingNode.active = false;\n      this.showNetworkMessage('网络链接断开，重新连接中...');\n    },\n\n    _socketConnected: function() {\n      this.hiddenNetworkMessage();\n    },\n\n\n    onDestroy: function () {\n      KQGlobalEvent.offTarget(this);\n    },\n\n    clickExit: function () {\n        cc.director.loadScene('hall');\n    },\n\n    clickStart: function () {\n      Socket.sendEnterRandom(this._userId);\n      this._showMatching();\n\n      /*#####begin*/\n      //reason是服务器发送回来的\n      /*if(this._response.data.reason == \"你的钻石不足\"){\n          this.tishi.active = true;\n      }*/\n      /*#####end*/\n\n      this.scheduleOnce(this._timeoutRandomAction, 5);\n    },\n    /*#####点击空白地方，砖石不足提示消失*/\n    /*onBtnKong:function () {\n        if(this.tishi.active){\n            this.tishi.active = false;\n        }else{\n            //什么也不做\n        }\n    },*/\n    /*取消匹配*/\n    clickCancel:function () {\n      Socket.sendCancelRandom(this._userId);\n\n      this._hideMatching();\n    },\n\n    _timeoutRandomAction: function() {\n        this._hideMatching();\n        this.showAlertMessage('进入匹配失败');\n    },\n\n    _showMatching: function() {\n        var comp = this.matchingNode.getComponent('alert');\n        comp.alert();\n        this.matchingLabel.string = '正在匹配中，请稍后...';\n        let num = 0;\n        this.schedule(function() {\n            num = num + 0.5;\n            this.timeNode.rotation = num;\n         }, 0.01);\n    },\n\n    _hideMatching: function() {\n        var comp = this.matchingNode.getComponent('alert');\n        comp.dismissAction();\n    },\n\n     showNetworkMessage:function(msg) {\n        this.unschedule(this._timeoutRandomAction);\n\n        if (this.networkNode != null) {\n            var removeSelfAction = cc.removeSelf();\n            this.networkNode.runAction(removeSelfAction);\n            this.networkNode = null;\n        }\n        this.networkNode = cc.instantiate(this.waitingPrefab);\n        this.node.addChild(this.networkNode);\n        var comp = this.networkNode.getComponent('alert');\n        var self = this;\n        comp.onDismissComplete = function() {\n            self.networkNode = null;\n        };\n        comp.setMessage(msg);\n        comp.alert();\n    },\n\n    hiddenNetworkMessage:function() {\n        if (this.networkNode != null) {\n            this.networkNode.getComponent('alert').dismissAction();\n        }\n    },\n\n    showAlertMessage: function(msg) {\n        if (!msg) {\n            cc.error(\"不能显示为空的信息\");\n            return;\n        }\n\n        if (!this.alertMessageNode) {\n            this.alertMessageNode = cc.instantiate(this.alertPrefab);\n            this.node.addChild(this.alertMessageNode);\n        }\n\n        this.alertMessageNode.getComponent('alert').setMessage(msg);\n        this.alertMessageNode.getComponent('alert').alert();\n    },\n});\n"]}