{"version":3,"sources":["agreement.js"],"names":["Socket","require","KQGlobalEvent","KQGlabolSocketEventHander","cc","Class","extends","Component","properties","agreement","default","type","Label","onLoad","on","Event","ReceiveHallInfo","_socketReceiveHallInfo","response","result","s","find","data","string","info1"],"mappings":";;;;;;AAAA,IAAMA,SAASC,QAAQ,QAAR,CAAf;AACA,IAAMC,gBAAgBD,QAAQ,eAAR,CAAtB;AACA,IAAME,4BAA4BF,QAAQ,2BAAR,CAAlC;AACAG,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,mBAAW;AACPC,qBAAS,IADF;AAEPC,kBAAMP,GAAGQ;AAFF;AAXH,KAHP;;AAoBL;AACAC,YAAQ,kBAAY;AAChBX,sBAAcY,EAAd,CAAiBd,OAAOe,KAAP,CAAaC,eAA9B,EAA+C,KAAKC,sBAApD,EAA4E,IAA5E;AACA;AACA;AACH,KAzBI;AA0BLA,4BAAwB,gCAAUC,QAAV,EAAoB;AACxC,YAAI,CAACA,SAASC,MAAd,EAAsB;AAClB;AACH;AACD,YAAIC,IAAIhB,GAAGiB,IAAH,CAAQ,kBAAR,CAAR;AACA,YAAIC,OAAOJ,SAASI,IAApB;AACA;AACA;AACA;AACA;AACA,aAAKb,SAAL,CAAec,MAAf,GAAwBD,KAAKE,KAAL,IAAc,EAAtC;AACH;AACD;AACA;;AAEA;AAzCK,CAAT","file":"agreement.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["const Socket = require('socket');\r\nconst KQGlobalEvent = require('KQGlobalEvent');\r\nconst KQGlabolSocketEventHander = require('KQGlabolSocketEventHander');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        agreement: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        KQGlobalEvent.on(Socket.Event.ReceiveHallInfo, this._socketReceiveHallInfo, this);\r\n        // cc.log('----61')\r\n        //  cc.log(this.agreement)\r\n    },\r\n    _socketReceiveHallInfo: function (response) {\r\n        if (!response.result) {\r\n            return;\r\n        }\r\n        var s = cc.find('Canvas/agreement');\r\n        let data = response.data;\r\n        //this._info1 = response.data;\r\n        // cc.log(this.agreement)\r\n        // cc.log(s)\r\n        // cc.log('----61')\r\n        this.agreement.string = data.info1 || \"\";\r\n    },\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"]}